<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>t7&#39;Space</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://t7yang.github.io/"/>
  <updated>2017-09-11T03:02:12.383Z</updated>
  <id>https://t7yang.github.io/</id>
  
  <author>
    <name>t7yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[程式設計] 如何快速建立使用 Prettier + ESLint 自動排版程式碼專案</title>
    <link href="https://t7yang.github.io/20698/"/>
    <id>https://t7yang.github.io/20698/</id>
    <published>2017-09-09T11:22:05.000Z</published>
    <updated>2017-09-11T03:02:12.383Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>排版對程式設計來說，一直是個一大問題。</p>
</blockquote>
<h3 id="安裝相關套件"><a href="#安裝相關套件" class="headerlink" title="安裝相關套件"></a>安裝相關套件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; yarn add eslint eslint-plugin-prettier eslint-config-prettier babel-eslint prettier -D -E</div><div class="line">&gt; npm install eslint eslint-plugin-prettier eslint-config-prettier babel-eslint prettier --save-dev --save-exact</div></pre></td></tr></table></figure>
<h3 id="建立-eslintrc-設定檔"><a href="#建立-eslintrc-設定檔" class="headerlink" title="建立 .eslintrc 設定檔"></a>建立 <code>.eslintrc</code> 設定檔</h3><ul>
<li>官方組態參考：<a href="https://eslint.org/docs/user-guide/configuring" rel="external nofollow noopener noreferrer" target="_blank">https://eslint.org/docs/user-guide/configuring</a></li>
<li>awesome ESLint：<a href="https://github.com/dustinspecker/awesome-eslint" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/dustinspecker/awesome-eslint</a></li>
<li>Prettier 選項：<a href="https://github.com/prettier/prettier#options" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/prettier/prettier#options</a></li>
</ul>
<p>以下是純粹 prettier 的組態：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "extends": ["prettier"], // 套用 eslint-config-prettier 規則</div><div class="line">  "plugins": ["prettier"], // 啟動 eslint-plugin-prettier 作為自動修復錯誤</div><div class="line">  "rules": &#123;</div><div class="line">    "prettier/prettier": [ // 設定相關 prettier 規則</div><div class="line">      "warn", // 錯誤提示的部分可以改為警告，避免導致錯誤提示混雜</div><div class="line">      &#123;</div><div class="line">        "singleQuote": true, // JS 建議使用單引號</div><div class="line">        "trailingComma": "es5" // 結尾逗號建議使用 es5 合法</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>以下是集合常見的 eslint 組態：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "parser": "babel-eslint", // 用 babel 解析器比較通用</div><div class="line">  "parserOptions": &#123;</div><div class="line">    "ecmaVersion": 7, // 指定使用的 ECMAScript 版本</div><div class="line">    "sourceType": "module" // 模組還是一般的 script</div><div class="line">  &#125;,</div><div class="line">  "env": &#123; // 加入內建的環境組態讓程式不會報錯</div><div class="line">    "browser": true,</div><div class="line">    "node": true,</div><div class="line">    "es6": true,</div><div class="line">    "jquery": true</div><div class="line">  &#125;,</div><div class="line">  "extends": ["prettier", "eslint:recommended"], // 加入其他規則</div><div class="line">  "plugins": ["prettier"], // 加入其他 plugin</div><div class="line">  "rules": &#123;</div><div class="line">    "prettier/prettier": [ // 設定相關 prettier 規則</div><div class="line">      "warn",</div><div class="line">      &#123;</div><div class="line">        <span class="attr">"singleQuote"</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">"trailingComma"</span>: <span class="string">"es5"</span></div><div class="line">      &#125;</div><div class="line">    ],</div><div class="line">    "eqeqeq": ["error", "alway"] // 加入其他的規則</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="新增-npm-scripts"><a href="#新增-npm-scripts" class="headerlink" title="新增 npm scripts"></a>新增 <code>npm scripts</code></h3><p>官方指令參考：<a href="https://eslint.org/docs/user-guide/command-line-interface" rel="external nofollow noopener noreferrer" target="_blank">https://eslint.org/docs/user-guide/command-line-interface</a></p>
<ul>
<li><code>eslint</code>：執行 <code>eslint</code></li>
<li><code>src</code>：指定目錄</li>
<li><code>--fix</code>：自動修復可修復的錯誤或警告<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"eslint"</span>: <span class="string">"eslint src --fix"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="結合-eslint-loader-即時檢查"><a href="#結合-eslint-loader-即時檢查" class="headerlink" title="結合 eslint-loader 即時檢查"></a>結合 eslint-loader 即時檢查</h3><ul>
<li>eslint-loader: <a href="https://github.com/MoOx/eslint-loader" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/MoOx/eslint-loader</a></li>
</ul>
<p>在不藉助使用者自行安裝編輯器套件的情況下，想要達到在開發者 <code>commit</code> 前做好 eslint 檢查和 prettier 排版修正，除了下面還會提到的 <code>pre-commit</code> 方法外，就是結合 eslint-loader 讓 webpack 在持續監視的情況即時套用修正。</p>
<p>安裝 eslint-loader<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn add -D eslint-loader</div></pre></td></tr></table></figure></p>
<p>設定 webpack.config.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    rules: [</div><div class="line">      &#123;</div><div class="line">        enforce: <span class="string">'pre'</span>, <span class="comment">// 確保 lint 的結果是最原始的檔案內容</span></div><div class="line">        test: <span class="regexp">/\.js$/</span>,</div><div class="line">        exclude: <span class="regexp">/node_modules/</span>,</div><div class="line">        loader: <span class="string">'eslint-loader'</span>,</div><div class="line">        options: &#123;</div><div class="line">          fix: <span class="literal">true</span>, <span class="comment">// 自動修正可修正的項目</span></div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其他選項請參考 eslint-loader 網站說明。</p>
<h3 id="設定-commit-前重新排版"><a href="#設定-commit-前重新排版" class="headerlink" title="設定 commit 前重新排版"></a>設定 <code>commit</code> 前重新排版</h3><p>官方在提供了三種方式，這裡則提供另一個作者覺得比較好的解決方案。</p>
<p>安裝 <code>pre-commit</code> 套件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn add -D pre-commit</div></pre></td></tr></table></figure></p>
<p>修改 <code>package.json</code> 的內容，新增後就會有這樣的效果：在 <code>commit</code> 動作之前先執行 <code>store-add</code> 把當前已 <code>add</code> 的檔案暫存在 <code>gittoadd</code> ，接著繼續執行 <code>eslint</code> 和 <code>prettier</code> 重新排版，之後透過 <code>git update</code> 把暫存在 <code>gittoadd</code> 的檔案清單重新 <code>add</code> 回去，最後繼續執行 <code>commit</code>。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"eslint"</span>: <span class="string">"eslint src --fix"</span>,</div><div class="line">    <span class="attr">"store-add"</span>: <span class="string">"git diff --name-only --cached  --diff-filter=ACMRT &gt; gittoadd"</span>,</div><div class="line">    <span class="attr">"git-update"</span>: <span class="string">"cat ./gittoadd | xargs git add"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"pre-commit"</span>: [<span class="string">"store-add"</span>, <span class="string">"eslint"</span>, <span class="string">"git-update"</span>]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最後記得把 <code>gittoadd</code> 這個暫存用檔案加入 <code>.gitignore</code> 中，避免被 <code>git</code> 監視。</p>
<p>雖然比起平常執行 <code>commit</code> 的速度要慢上不少，但是這樣就可以真正的做到自動化，就算多人開發時，某些開發者沒有安裝 prettier 的編輯器套件也可以確實地在 <code>commit</code> 之前根據排版規整理過。</p>
<h3 id="安裝編輯器套件"><a href="#安裝編輯器套件" class="headerlink" title="安裝編輯器套件"></a>安裝編輯器套件</h3><ul>
<li>atom: <a href="https://atom.io/packages/linter-eslint" rel="external nofollow noopener noreferrer" target="_blank">linter-eslint</a></li>
<li>Visual Studio Code: <a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" rel="external nofollow noopener noreferrer" target="_blank">ESLint</a></li>
</ul>
<h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul>
<li><a href="https://medium.com/@netczuk/your-last-eslint-config-9e35bace2f99" rel="external nofollow noopener noreferrer" target="_blank">Your last ESLint config</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;排版對程式設計來說，一直是個一大問題。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安裝相關套件&quot;&gt;&lt;a href=&quot;#安裝相關套件&quot; class=&quot;headerlink&quot; title=&quot;安裝相關套件&quot;&gt;&lt;/a&gt;安裝相關套件&lt;/h3&gt;&lt;fi
    
    </summary>
    
    
      <category term="programming" scheme="https://t7yang.github.io/tags/programming/"/>
    
      <category term="prettier" scheme="https://t7yang.github.io/tags/prettier/"/>
    
      <category term="eslint" scheme="https://t7yang.github.io/tags/eslint/"/>
    
      <category term="git" scheme="https://t7yang.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>[程式設計] 在 Windows 正常執行 bash</title>
    <link href="https://t7yang.github.io/7653/"/>
    <id>https://t7yang.github.io/7653/</id>
    <published>2017-09-02T11:38:56.000Z</published>
    <updated>2017-09-09T07:46:04.915Z</updated>
    
    <content type="html"><![CDATA[<p>在 Windows 下安裝 <code>git</code> 的選擇通常是 <code>git for windows</code> ，無論使用安裝版還是免安裝版的 cmder ，都會自帶 bash 這個終端機介面。但經常會遇到找不到指令或 <code>npm</code> 安裝的程式無法正確執行。</p>
<h3 id="一般指令找不到（ls）"><a href="#一般指令找不到（ls）" class="headerlink" title="一般指令找不到（ls）"></a>一般指令找不到（ls）</h3><ul>
<li>在 bash 下輸入 <code>cd ~</code> 確認你的家目錄在哪（可以 <code>ls</code> 出來看看）。</li>
<li>到家目錄新增一個 <code>.bashrc</code>。</li>
<li>把 <code>git for windows</code> 的 <code>/usr/bin</code> 系統絕對路徑合併到 <code>$PATH</code> 。<br><code>PATH=&quot;$PATH:/c/program files/git for windows/usr/bin&quot;</code></li>
<li>真實路徑或許會因電腦各異，請自行確認。</li>
</ul>
<h3 id="npm-及相關的指令找不到"><a href="#npm-及相關的指令找不到" class="headerlink" title="npm 及相關的指令找不到"></a><code>npm</code> 及相關的指令找不到</h3><ul>
<li>找到你的 <code>npm</code> 指令所在位置：<code>where npm</code></li>
<li>以管理員身分執行系統的 <code>cmd</code></li>
<li><code>cd</code> 到 <code>git for windows</code> 路徑</li>
<li>執行：<code>mklink /d node_modules &quot;全域 node_modules 的絕對路徑&quot;</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Windows 下安裝 &lt;code&gt;git&lt;/code&gt; 的選擇通常是 &lt;code&gt;git for windows&lt;/code&gt; ，無論使用安裝版還是免安裝版的 cmder ，都會自帶 bash 這個終端機介面。但經常會遇到找不到指令或 &lt;code&gt;npm&lt;/code&gt;
    
    </summary>
    
    
      <category term="Windows" scheme="https://t7yang.github.io/tags/Windows/"/>
    
      <category term="programming" scheme="https://t7yang.github.io/tags/programming/"/>
    
      <category term="bash" scheme="https://t7yang.github.io/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>[音樂] 聊聊我喜歡「那種調調」的音樂</title>
    <link href="https://t7yang.github.io/26391/"/>
    <id>https://t7yang.github.io/26391/</id>
    <published>2016-09-06T13:51:00.000Z</published>
    <updated>2017-09-02T10:44:43.464Z</updated>
    
    <content type="html"><![CDATA[<p>「……我最喜歡妳唬爛說謊的模樣，逗我笑……」，我為什麼會有這麼「邪惡」的空耳，哈哈哈</p>
<p><a name="more"></a></p>
<p>這首是來自陳昇的經典歌曲《不再讓你孤單》，我很喜歡這首歌，只是不知道從甚麼開始，我都會把原本為「我最喜歡妳胡亂說話的模樣，逗我笑」聽成「我最喜歡妳唬爛說謊的模樣，逗我笑（感覺是不是更有意境呢？笑）。</p>
<iframe allowfullscreen frameborder="0" height="315" src="https://www.youtube.com/embed/jL_ua9Yc-oM?rel=0" width="560"></iframe>

<p>陳昇對我來說是一個很特別的歌手，在我的感受中，他的歌曲或許會因為你所經歷的不同而開始喜歡。我並沒有喜歡他所有的作品，但就總是會在某個時間點突然喜歡上他的某個作品，這樣的情況也適用在伍佰。或是更確切的說，他們兩者的作品通常不會在你還是少年時就會喜歡的類型。</p>
<h3 id="聽音樂的啟蒙"><a href="#聽音樂的啟蒙" class="headerlink" title="聽音樂的啟蒙"></a>聽音樂的啟蒙</h3><p>大概每個人都一些聽音樂的啟蒙者，因為我是家裡的么子，所以自然而然的受到了哥哥的影響。在那個還是卡帶常見，光碟難得的時代（我家比較鄉下），透過哥哥的方式接觸了如伍佰、五月天、陶喆、阿牛……陳昇——其實我對他的印象不多。或許是因為這樣的關係，導致了我往後也只喜歡聽創作歌手的歌（上述我舉的例子中有兩個，後期的歌有越來越芭樂[1]的傾向，我就很少聽了）。只聽創作歌手的作品，其中一個原因是，我認為他們通常知道自己要表達甚麼，他們能夠寫出和唱出自己心中的想法和感觸，讓你不由自主地產生共鳴；這些是流行音樂很難帶給我的。</p>
<p>[1]俗氣、市場導向。</p>
<h3 id="那種「調調」的音樂"><a href="#那種「調調」的音樂" class="headerlink" title="那種「調調」的音樂"></a>那種「調調」的音樂</h3><p>我偶爾會聽搖滾類型（HIGH歌）的歌曲，但多數情況它們並不是我的首選。相對於熱鬧、動力、搖滾的音樂，我更喜歡帶有一點慵懶、負面（情緒）的音樂類型，我就是喜歡這樣的音樂，當然也被人取笑過喜歡聽這種死氣沉沉的歌。所以不難猜測的是，我喜歡爵士類型的歌曲或音樂，尤其是當代的日式作曲家（當然，我還會慢慢地去發現其他符合我喜好的中外創作者）。</p>
<h3 id="「曬衣服」時刻"><a href="#「曬衣服」時刻" class="headerlink" title="「曬衣服」時刻"></a>「曬衣服」時刻</h3><p>經典的爵士歌手——阿姆斯壯（Louis Armstrong）。他那充滿磁性的歌聲，和藹到看起來有點憨厚的臉龐，都構成你不能不愛他所演出和創作的作品。那首由奧黛麗．赫本（Audrey Hepburn）原唱的《<a href="https://youtu.be/BOByH_iOn88" rel="external nofollow noopener noreferrer" target="_blank">月河</a>》（Moon River），經阿姆斯壯來<a href="https://youtu.be/Fd_JDrnBMMA" rel="external nofollow noopener noreferrer" target="_blank">演唱</a>，帶來的是全然不同的體驗（但是如果你要問我最喜歡的版本？當然是赫本的）。</p>
<p>我對艾瑞克．杜菲（Eric Dolphy） 其實認識的不深也不久，但是好音樂無須時間的醞釀，一聽到他的作品，我就立刻愛上了。但因為接觸的時間不久，加上純粹的音樂對門外漢而言確實比較難以精準地指出那首才是最喜歡的。</p>
<p>貝姬黛兒（Beegie Adair）也是一位我最近才發現的藝人，他跟杜菲一樣，作品幾乎都是音樂為主，而且很多都是一些名曲重新進行爵士鋼琴演奏。如果你有個寧靜的午後，泡上一杯研磨黑咖啡，加上昏黃的燈光，吹著徐徐的和風，最後再加上黛兒的音樂，那絕對是一段享受的時光。</p>
<p>我說過，我喜歡不少日本的爵士樂創作者，其實不只如此，可以說我接觸爵士音樂就是從日本的現代爵士樂開始（或新時代，我對音樂的分類，認識地並不深）。日式現代爵士樂，對我來說就好比啤酒，很容易「入口」，不需要時間的醞釀，輕盈、柔和是我所想到的感受。對我而言，比較不喜歡的部分應該就是，他們都喜歡跟其他歌手合作，把部份的作品（作曲為主）結合說唱（爵士嘻哈），這些作品我能接受的就不多了。</p>
<p><div data-select-like-a-boss="1"><br></div><div data-select-like-a-boss="1">把日式爵士說得如此美好，總要舉一些例子。我會針對幾個我最喜歡的作曲家和我認為在他們的作品中幾個最棒的作品寫下。</div><div data-select-like-a-boss="1"><br></div><div data-select-like-a-boss="1">re:plus</div>re:plus是我接觸最早的日本作曲家，原本是一對，之後拆夥只剩一個。純音樂的話，我絕對不希望你錯過他的《<a href="https://youtu.be/QS6DIPus1M4" rel="external nofollow noopener noreferrer" target="_blank">Autumn Leaves</a>》。曲風如名，一抹秋風，吹起了你心中的落葉，有一種淡淡的哀傷（沒錯，就是那種調調）。</p>
<p>還有另外一首我也不希望你錯過就是《<a href="https://youtu.be/qTuNVoBHRZg" rel="external nofollow noopener noreferrer" target="_blank">Quite Blue</a>》，你或許也已經從名稱中看出端倪。是的，這個曲就是有一種「藍藍的」感覺，但是我覺得整首曲最畫龍點睛的部分在於之中穿插的說話聲，就像是一群孩子很快樂的在嘻嘻哈哈跟彼此分享著喜悅，讓整首「藍色系」的曲中帶來了一點歡樂。</p>
<p>在歌曲方面，跟Sam Ock合作的《<a href="https://youtu.be/utL9IDe-2Q0" rel="external nofollow noopener noreferrer" target="_blank">Yourside feat. Sam Ock</a>》絕對在我推薦的榜單上（稍後還會看到Sam Ock）。這很明顯是一首情歌，而且差別在他還有MV（音樂錄影帶，大家都講MV習慣了，我還真的不知道MV中文叫甚麼），但也因此有MV和歌詞，使得整體的想像空間降低了很多。但無論如何，這首歌算是很容易入耳的，接受度不會差。</p>
<p>Hidetake Takayama<br>Takayama算是我第二個接觸的日本創作者，我覺得他跟re:plus的風格相當類似，所以他的作品我接受起來完全不是難事。對我而言，他跟re:plus最大的差別是，他的作品接受度平均更高，re:plus則比較容易會有好聽就非常好聽，不喜歡就非常不喜歡。但也因此，我比較難說出哪些Takayama的作品是我絕對不希望你錯過的。</p>
<p>在純音樂方面，《<a href="https://youtu.be/2kwHQMXzt9Y" rel="external nofollow noopener noreferrer" target="_blank">Sunset Song</a>》算是我相對喜歡的一首。整體來說就是一種很舒服的感覺，但我比較感受不到更多意境（這也是為什麼我說re:plus有些作品可以讓人印象深刻，但Takayama卻都是平均的好）。</p>
<p>相對re:plus，Takayama跟其他人合作的部分好聽的就不少了。 《<a href="https://youtu.be/YauroKvscuk" rel="external nofollow noopener noreferrer" target="_blank">Welcome to You and Me</a>》就是屬於我不希望你錯過的（又看到Sam Ock了，他是一個美籍韓裔，主要都是演唱）。雖然有說唱的成分，但是作曲真的很棒，再加上副歌的部分很好聽也不難聽懂，整體而言就是一首非常容易入耳的情歌。</p>
<p>長達七分半鐘的《<a href="https://youtu.be/d_ukAcdcVLw" rel="external nofollow noopener noreferrer" target="_blank">Believe</a>》一樣是結合歌唱與說唱的模式，這首歌的特點在於雖然長達七分半的曲長，但是不讓你聽了有膩的感覺，不是那種為了曲長而曲長的作法，我覺得主要是因為歌詞的部分不是那種一直在重複的類型（新國某林姓歌手的歌是不難聽，但大概聽一到兩次就膩了，歌詞就是在重複），再加上音樂與歌唱之間很好的平衡分布，適度的穿插說唱並不會帶來太大的突兀。</p>
<p>［待續……］</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;「……我最喜歡妳唬爛說謊的模樣，逗我笑……」，我為什麼會有這麼「邪惡」的空耳，哈哈哈&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這首是來自陳昇的經典歌曲《不再讓你孤單》，我很喜歡這首歌，只是不知道從甚麼開始，我都會把原本為「我最喜歡妳胡亂說話的模樣
    
    </summary>
    
    
      <category term="Music" scheme="https://t7yang.github.io/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>[程式設計] Sublime Text, Atom, Visual Studio Code的心得與感想</title>
    <link href="https://t7yang.github.io/22235/"/>
    <id>https://t7yang.github.io/22235/</id>
    <published>2016-08-20T15:21:00.000Z</published>
    <updated>2017-09-02T10:50:52.204Z</updated>
    
    <content type="html"><![CDATA[<p>這原本是發佈在程式人雜誌臉書上的文章，想說既然打了這麼多了，就順便貼到部落格，當作是一個紀錄。 本文講述Atom和Sublime Text之間的差異，還有標題中三款編輯器的心得與想法。</p>
<p><a name="more"></a></p>
<h2 id="Atom-Vs-Sublime-Text-心得分享"><a href="#Atom-Vs-Sublime-Text-心得分享" class="headerlink" title="Atom Vs. Sublime Text 心得分享"></a>Atom Vs. Sublime Text 心得分享</h2><p>####優點：</p>
<ol>
<li>免費開放原始碼</li>
<li>套件社群非常活躍，量多</li>
<li>更新頻率高（富爸爸，相對sublime）</li>
<li>非常容易上手</li>
<li>設定幾乎都有圖形化介面</li>
<li>JSLint只需要裝套件就搞定</li>
<li>對多國編碼的支援較友善5.  側邊欄快捷鍵控制較方便</li>
</ol>
<h4 id="缺點："><a href="#缺點：" class="headerlink" title="缺點："></a>缺點：</h4><ol>
<li>超級無敵吃資源</li>
<li>編輯器中的chrome，吃一堆但效能跟屎一樣</li>
<li>碎檔一堆，快取檔案超多，佔空間</li>
<li>啟動時狂吃磁碟讀取大概要幾分鐘</li>
<li>1.1.x beta已修復，但你還是要等它狂讀硬碟最少20秒</li>
<li>記憶體耗用超多</li>
<li>開啟大檔就準備翻臉給你看</li>
<li>功能極度陽春，都得靠套件</li>
</ol>
<p>我用了一個月左右，受不了，效能真的差到一個極限，所以回來用sublime text。<br>但以未來趨勢而言，富爸爸效益的優勢還是比較大。</p>
<p>所以VS CODE跟ATOM後勢比較可期（VS CODE在功能上又更陽春，需要更多的時間追上）目前的情勢是G社F社分邊站（F社推出的基於Atom的Nuclide，G社則因為NG的關係跟M社走得比較近）。或許未來這兩家在功能跟效能慢慢追上來之後，sublime的市佔率應該會有顯著的下滑，但就目前sublime text還是很好的選擇。</p>
<h2 id="個人對三款編輯器的心得與想法"><a href="#個人對三款編輯器的心得與想法" class="headerlink" title="個人對三款編輯器的心得與想法"></a>個人對三款編輯器的心得與想法</h2><h4 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text:"></a>Sublime Text:</h4><p>sublime給我的感覺有點像Presto排版核心的Opera瀏覽器，一個以希望提供使用者內建盡可能多貼心功能的編輯器，同時又不失擴充性，最重要的是它在資源的耗用上非常節省，效能表現非常出色。它讓使用者可以很深刻的感受到自己使用的是一個輕巧的編輯器，而不是一個笨重的IDE。</p>
<h4 id="Atom"><a href="#Atom" class="headerlink" title="Atom:"></a>Atom:</h4><p>atom給我的感覺就是chrome，一頭吃資源的怪獸而且甚麼內建功能都沒有。因為開發的理念不同，atom只提供一款編輯器最基礎的功能，其他任何實用性的功能它都以套件的形式附加上去。提供API而不是內建一堆功能，讓開發者去「hack」，因此他們也稱自己是Most  Hackable的編輯器。但最為人詬病的也來自於它的架構，臃腫、耗用資源，但卻沒有在效能上有出色的表現，這點是最讓人失望的。</p>
<h4 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code:"></a>Visual Studio Code:</h4><p>VS  Code並沒有讓我聯想到一款瀏覽器。但是它讓我印象非常深刻來自於它提供了當代開發者最為關心的三個工具，Intellisense、Git、Lint、也許是因為TypeScript的關係，VSC內建就針對這三種工具提供非常基礎支援，透過結合其他的擴充套件，尤其是TS的開發者，VSC帶來的開發體驗是令人驚艷的。但是他的致命缺點就是內建功能的缺乏，同時擴充套件的開發社群亦相對的不活躍（還有每次安裝或更新套件後都必須重新啟動編輯器，你總算讓我想到一款瀏覽器了——N年前的Firefox）。總結就是VSC是一款很有特色編輯器。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這原本是發佈在程式人雜誌臉書上的文章，想說既然打了這麼多了，就順便貼到部落格，當作是一個紀錄。 本文講述Atom和Sublime Text之間的差異，還有標題中三款編輯器的心得與想法。&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Atom-
    
    </summary>
    
    
      <category term="Editor" scheme="https://t7yang.github.io/tags/Editor/"/>
    
      <category term="Programming" scheme="https://t7yang.github.io/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>Firefox 字型設定大全（成像設定、字型選擇、使用者樣式）</title>
    <link href="https://t7yang.github.io/58804/"/>
    <id>https://t7yang.github.io/58804/</id>
    <published>2016-04-03T13:13:00.000Z</published>
    <updated>2017-09-02T11:13:45.291Z</updated>
    
    <content type="html"><![CDATA[<p>除了利用 Mactype 或 GDI++ 等成像軟體來輔助字型的成像外，Firefox 其實也內建了字型成像的選項供使用者調整。這些選項預設是停用的，知道的人可能相對較少，所以常常就必須面臨是否要放棄硬體加速來換 Mactype 成像的困境，但其實可以兩全其美。<br><a name="more"></a></p>
<table align="left" border="1"><thead><tr>       <th scope="col">設定項目</th>       <th scope="col">選項</th>       <th scope="col">說明及建議</th>     </tr></thead>   <tbody><tr>       <td style="max-width: 200px;">gfx.font_rendering.directwrite.enabled</td>       <td><br>TRUE／FALSE</td>       <td><br>啟用字型成像，必須啟用後底下的設定才有效果。</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype_params.pixel_structure</td>       <td><br>0 = Flat<br>1 = RGB<br>2 = BGR</td>       <td>像素結構，液晶螢幕使用1（RGB）</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype_params.gamma</td>       <td><br>1000～2200</td>       <td><br>Gamma 校正值，標準：Windows 2200、MAC 1800。</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype_params.cleartype_level</td>       <td><br>0～100</td>       <td><br><a href="http://zh.wikipedia.org/wiki/ClearType" rel="external nofollow noopener noreferrer" target="_blank">ClearType</a> 的強度，數值越高字越平滑，但也可能越模糊。一般建議落在 50～80 之間即可。</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype_params.enhanced_contrast</td>       <td><br>0～1000</td>       <td><br>對比度，數值越高越銳利，字也會越粗。一般建議落在 200～500 之間即可。</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype_params.rendering_mode</td>       <td><br>0 = Default<br>1 = Aliased<br>2 = GDI Classic<br>3 = GDI Natural Widths<br>4 = Natural<br>5 = Natural Symmetric</td>       <td><br>成像模式，可以根據自己的系統反覆嘗試何種模式最舒服，不須重新啟動瀏覽器即可以看到效果。<br>其中「Default」、「Natural」、「Natural Symmetric」是不錯的選擇。某些電腦在選擇「Aliased」後介面文字可能會完全看不到。Default 模式小字用 Natural，大字用 Natural Symmetric。</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype_params.force_gdi_classic_for_families</td>       <td>字型名稱</td>       <td>這個清單的字型會強制使用傳統GDI的方式成像，某些較適合使用GDI進行成像的字型可以加入這個清單</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype_params.force_gdi_classic_max_size</td>       <td>數字</td>       <td>強制使用傳統GDI方式成像的最大大小，應該跟上一個選項是連動的</td>     </tr><tr>       <td style="max-width: 200px;">gfx.use_text_smoothing_setting</td>       <td><br>TRUE／FALSE</td>       <td><br>開啟平滑設定（用於 Mac 系統）</td>     </tr><tr>       <td style="max-width: 200px;">gfx.font_rendering.cleartype.always_use_for_content</td>       <td>TRUE / FALSE</td>       <td>對所有內容啟用ClearType成像</td>     </tr><tr>       <td style="max-width: 200px;">browser.display.auto_quality_min_font_size</td>       <td>數字</td>       <td>決定在哪個字級以上使用高品質成像（<a href="http://kb.mozillazine.org/Browser.display.auto_quality_min_font_size" rel="external nofollow noopener noreferrer" target="_blank">註1</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering" rel="external nofollow noopener noreferrer" target="_blank">註2</a>）</td>     </tr></tbody> </table>

<p>資料來源：<br><a href="http://blog.timshan.idv.tw/2013/06/howto.html" rel="external nofollow noopener noreferrer" target="_blank">http://blog.timshan.idv.tw/2013/06/howto.html</a><br><a href="https://addons.mozilla.org/zh-tw/firefox/addon/anti-aliasing-tuner/" rel="external nofollow noopener noreferrer" target="_blank">https://addons.mozilla.org/zh-tw/firefox/addon/anti-aliasing-tuner/</a><br><a href="http://mikawaffle.blogspot.tw/2012/02/firefox.html" rel="external nofollow noopener noreferrer" target="_blank">http://mikawaffle.blogspot.tw/2012/02/firefox.html</a><br>並加入部分個人的建議<br>測試 Firefox 版本：28 beta</p>
<p>這裡還需要提醒的是，有時會發現怎麼調都不是很好看，這時要警覺可能是跟螢幕的設定（對比度佔很大原因），適時的調整螢幕的設定或許會發現問題原來出在這裡。</p>
<p>除了自己開啟 about:config 來敲敲打打之外，如果習慣使用圖形介面來操作的話，也可以安裝<a href="https://addons.mozilla.org/firefox/addon/anti-aliasing-tuner/" rel="external nofollow noopener noreferrer" target="_blank">Anti Aliasing Tuner</a>。</p>
<h2 id="字型的選擇"><a href="#字型的選擇" class="headerlink" title="字型的選擇"></a>字型的選擇</h2><p>除了成像的參數之外，其實中文世界中最大的閱讀愉悅度的障礙其實來自於字型本身。因為中文世界中非常缺乏高品質的字型（就算是付費的字型）。在作業系統上：</p>
<p>※各常見作業系統簡單介紹<br>MAC：<br>有先天的「蘋果基因」優勢，很大程度的克服了瀏覽器中文字難看的問題。除了行之有年「儷黑PRO」和「黑體 TC」外，也有一些使用者會偷渡使用品質更好的日文冬青黑體。</p>
<p>Windows：<br>直到微軟在Windows Vista內建「微軟正黑體」後，微軟作業系統的使用才有一款比較好看的無襯線黑體字型（最重要的是微軟正黑體符合國字標準字體的規範。在此之前，不少使用者偏好使用日文字型。</p>
<p>Linux：<br>一般來說文泉驛黑體是Linux 使用者的首選，但其實這款字型是修改自 Android 的Unicode字型，並根據對岸的標準規範來修改的。</p>
<p>常見的中文無襯線比較可以參考<a href="https://docs.google.com/document/d/1UOCwR5B1UlV0l1d1bu79raDCtKwiCj2rTACBX3MrsAc/edit?usp=sharing" rel="external nofollow noopener noreferrer" target="_blank">這裡</a>。</p>
<p>※字型選擇輔助圖<br>非常在意字型符合國字標準字體</p>
<ul>
<li><p>是</p>
<ul>
<li><p>偏好無襯線字型</p>
<pre><code>*   是

        *   微軟正黑體（Windows Vista+內建）
*   思源黑體（開放字型）
</code></pre><ul>
<li>否<ul>
<li>標楷體（Windows 內建）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>否</p>
<ul>
<li><p>偏好無襯線字型</p>
<pre><code>*   是

        *   思源黑體衍生字型（柔黑體等，多數為日本產因此不符合台灣規範的可能較高）*   微軟雅黑（Windows Vista+內建）

            *   SimHei（Windows內建，簡體字型）

            *   Arial Unicode MS（Windows 內建，有中文Unicode 字型）

            *   明瞭體（Windows Vista+內建，日文字型，日語：メイリオ，英文：Meiryo）

            *   MSGothic（Windows內建，日文字型）

            *   Yu Gothic（Windows內建，日文字型）

            *   信黑體（付費中文字型）
</code></pre></li>
</ul>
</li>
</ul>
<p>一些 Windows 使用者甚至也會想辦法取得MAC的中文或日文字型，並使用在Windows 系統上已取得更好的視覺享受，再此就不多做討論。</p>
<h2 id="套用KillSerif-Style補完最後的拼圖"><a href="#套用KillSerif-Style補完最後的拼圖" class="headerlink" title="套用KillSerif Style補完最後的拼圖"></a>套用KillSerif Style補完最後的拼圖</h2><p>設定好文字成像之後，接著還必須處理瀏覽器以甚麼字型來顯示。在螢幕顯示的情況，無襯線體的顯示效果要優於襯線體，因此黑體或圓體這類無襯線體是較好的選擇。但Firefox本身並沒有針對泛東亞使用者最佳化顯示字型的設定。因為僅透過內建字型設定並不能有效的讓泛東亞字型的顯示有一致性，就算開發團隊解決了圖示字型與文字字型分離設定的問題，但並不因為使得泛東亞字型的設定變得可接受。</p>
<p>所以，目前仍需要藉助外部的力量進行調整。<a href="https://userstyles.org/styles/111687/killserif-style" rel="external nofollow noopener noreferrer" target="_blank">KillSerif Style</a>或許是其中一個目前最佳的選擇，仔細閱讀它的使用指南，根據你的使用的瀏覽器進行設定，搭配上述的內建設定，你應該可以取得最接近理想的顯示效果。</p>
<h2 id="中文字型的悲哀"><a href="#中文字型的悲哀" class="headerlink" title="中文字型的悲哀"></a>中文字型的悲哀</h2><p>從上圖的「字型選擇輔助圖」可以清楚地看得出來，目前要找到一個符合「國字標準字體」規範的無襯線字型，唯一的選擇只有微軟的「正黑體」，更別說「微軟正黑體」在經歷了數代的更新之後仍存在許多問題（某些字在粗體顯示時會在右邊出現一個全型的中文空格、多年來為人詬病的字重不夠、顯示小號文字時非常難看等），這也造成許多使用者寧願放棄符合國字標準字體的微軟正黑體，而選擇<strike>敵國的</strike>開放的文泉驛黑體。</p>
<p>除了是因為整個中文世界缺乏優秀的字型開發商（這個問題可能跟字型容易被流傳在網路上且華人社會較沒有付費購買字型的觀念有關），作業系統廠商也較不願意投資在中文字型的打造上（尤其台灣市場太小，多數使用者對字型要求與認識也不高）。</p>
<p>備註：<br>本文只是簡單針對 Firefox 內建的字型成像選項做了一些簡單的整理與介紹，其中在字型的選擇上著墨比較多的是以 Windows 使用者的觀點出發。若發現任何錯誤或不完整的資訊，歡迎糾正和補足。</p>
<p>本文最早發布於：2014/03/03</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;除了利用 Mactype 或 GDI++ 等成像軟體來輔助字型的成像外，Firefox 其實也內建了字型成像的選項供使用者調整。這些選項預設是停用的，知道的人可能相對較少，所以常常就必須面臨是否要放棄硬體加速來換 Mactype 成像的困境，但其實可以兩全其美。&lt;br&gt;&lt;a
    
    </summary>
    
    
      <category term="Firefox" scheme="https://t7yang.github.io/tags/Firefox/"/>
    
      <category term="Firefox Font Settings" scheme="https://t7yang.github.io/tags/Firefox-Font-Settings/"/>
    
  </entry>
  
  <entry>
    <title>[瀏覽器] KillSerif Style 更新至 5.3（原 MSJhengHei Style）</title>
    <link href="https://t7yang.github.io/16316/"/>
    <id>https://t7yang.github.io/16316/</id>
    <published>2015-08-30T05:30:00.000Z</published>
    <updated>2017-09-02T11:03:24.677Z</updated>
    
    <content type="html"><![CDATA[<p>KillSerif Style（原 MSJhengHei Style）是針對網路瀏覽器中文字型設計的一個 CSS 樣式，目的是希望把網頁的中文字型使用 CSS 的方式替換成對螢幕閱讀更加舒適的黑體字型。</p>
<p><a name="more"></a></p>
<p>前言：這個 CSS 就是讓瀏覽器強制使用指定的黑體中文字型去替換網路上常見的中文字型（襯線字型或簡體字型），同時不會有網路上一般的解決方案導致圖形字型（Icon Font）被破壞的問題。另外輔以 CSS 的文字陰影效果（text-shadow）對文字加上適度的強化使文字更加立體，以便更好地進行閱讀。</p>
<p>雖然有一直在更新，但是都沒有在部落格更新小心，這次直接集合5.1到5.3的更新。5.1主要是針對思源黑體的更新改了一些字型的名稱，還有加入自訂字型的選項，讓想要使用其他字型作為對應的使用者更方便使用。5.2主要是修正非使用微軟正黑體作為主要顯示字型的使用者無法正確替換微軟正黑體的情況，主要是因為這個樣式原本就叫做MSJhengHei Style，所以當初就沒有把微軟正黑體納入對應的字型中。5.3主要是針對Firefox加入了「微軟正黑體淡」的選項，因為我發現使用「微軟正黑體淡」加上文字陰影效果後整體相當棒，所以就加入了這個選項，粗體的部分仍然維持一樣，因為效果不佳。至於Chromium Based的使用者為什麼不能用，因為CB的程式碼不一樣，除非分開一般字型根粗體字型。有人跟我提我才考慮。</p>
<p>更新內容：</p>
<p>5.3</p>
<ul>
<li>新增：加入「微軟正黑體淡」到字型選項中，僅新增到FX一般字型選項中（若使用此字型建議同時啟用文字陰影，否則會文字會太虛，FX）</li>
<li>調整：修正一些字型選項中的文字<br>5.2</li>
<li>修正：補上「微軟正黑體」相關字型對應，以解決非使用微軟正黑體當作顯示字型時不會被替換的情況。<br>5.1</li>
<li>新增：自訂對應字型</li>
<li>新增：「Courier」字型對應（中文部分）</li>
<li>調整：選項「Noto Sans T Chinese 」→「Noto Sans TC」（@wcw5504 ）</li>
<li>調整：選項「Noto Sans CJK」→「Noto Sans CJK TC」（@wcw5504 ）</li>
<li>修正：補上一般字型缺「Microsoft YaHei UI」對應</li>
</ul>
<p>別忘了，有任何的問題，請記得回饋給我，感謝讀者和所有的協作者。</p>
<p>最後附上網址：<a href="https://userstyles.org/styles/111687" rel="external nofollow noopener noreferrer" target="_blank">https://userstyles.org/styles/111687</a></p>
<p>更新記錄：<a href="http://goo.gl/PhX31f" rel="external nofollow noopener noreferrer" target="_blank">http://goo.gl/PhX31f</a></p>
<blockquote>
<p>說明：<br>本作因為受到網路上許多熱心人士的協助，因此秉持回饋與分享的原則，授權方式非常自由，請參考原始碼之最末註解。<br>姓名標示的部分可以改成標示原始出處連結（既上述連結）。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;KillSerif Style（原 MSJhengHei Style）是針對網路瀏覽器中文字型設計的一個 CSS 樣式，目的是希望把網頁的中文字型使用 CSS 的方式替換成對螢幕閱讀更加舒適的黑體字型。&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前
    
    </summary>
    
    
      <category term="Firefox Font Settings" scheme="https://t7yang.github.io/tags/Firefox-Font-Settings/"/>
    
      <category term="Browser" scheme="https://t7yang.github.io/tags/Browser/"/>
    
  </entry>
  
  <entry>
    <title>[阻擋器] uMatrix 繼 Policeman 之後誕生的另一個阻擋器神器</title>
    <link href="https://t7yang.github.io/56524/"/>
    <id>https://t7yang.github.io/56524/</id>
    <published>2015-05-08T09:53:00.000Z</published>
    <updated>2017-09-02T10:42:20.403Z</updated>
    
    <content type="html"><![CDATA[<p>跟 Policeman 一樣，uMatrix 屬於矩陣型的過濾阻擋器，最重要的是他在操作介面上比起 Policeman 更加親合，附加了更多的功能，讓資安等級更上一層樓。<br><a name="more"></a><br>有長期追蹤我的文章的讀者應該都知道我對瀏覽器的阻擋套件非常著迷，尤其是那種可以手動自訂阻擋規則的神器。從我在使用 Opera 時期就已經寫過幾篇有關的文章，反倒是轉用 Firefox 後一直苦於無法有類似強力的套件出現。嘗試過諸如 <a href="https://addons.mozilla.org/firefox/addon/noscript" rel="external nofollow noopener noreferrer" target="_blank">NoScript</a>、<a href="https://addons.mozilla.org/firefox/addon/requestpolicy" rel="external nofollow noopener noreferrer" target="_blank">RequestPolicy</a> 等套件都不盡如意。直到去年透過 ghacks 的介紹才找到一個符合我所須的 <a href="https://addons.mozilla.org/zh-TW/firefox/addon/policeman" rel="external nofollow noopener noreferrer" target="_blank">Policeman</a>。</p>
<div data-select-like-a-boss="1"><br></div>

<ul>
<li><a href="http://t7yang.blogspot.com/2012/02/opera-ad-killer-content-blocker.html" rel="external nofollow noopener noreferrer" target="_blank">[阻擋器] 內建工具 – Content Blocker</a></li>
<li><a href="http://t7yang.blogspot.com/2012/02/block-script-in-opera-by-notscripts.html" rel="external nofollow noopener noreferrer" target="_blank">[阻擋器] 阻擋網頁指令碼的 NotScripts</a></li>
<li><a href="http://t7yang.blogspot.com/2012/11/block-google-promote-homepagebar.html" rel="external nofollow noopener noreferrer" target="_blank">[阻擋器] 以 Google 建議首頁列為例</a></li>
<li><a href="https://www.ptt.cc/bbs/Browsers/M.1413901205.A.16B.html" rel="external nofollow noopener noreferrer" target="_blank">[-Fx-] Policeman 資安附加元件／套件 神器出現</a><br>或許說到瀏覽器擋廣告套件，大家比較熟悉的是 Adblock 或 <a href="https://addons.mozilla.org/firefox/addon/adblock-plus" rel="external nofollow noopener noreferrer" target="_blank">Adblock Plus</a> 甚至是最近也釋出 Firefox 版本的 <a href="https://addons.mozilla.org/firefox/addon/ublock" rel="external nofollow noopener noreferrer" target="_blank">uBlock</a> 這類基於型樣過濾（Pattern-based）的套件，但我更喜歡的是基於矩陣過濾（Matrix-based）的阻擋器——Policeman &amp; uＭatrix（分類援引自作者的話）。</li>
</ul>
<p>根據 ghacks 的報導，目前 uＭatrix 仍處於早期開發，作者並不開放功能請求，而且也只能從 Github 中下載封裝好的套件檔案。但測試後發現整體運作尚屬流暢，不會有太大的問題發生。</p>
<blockquote>
<p>uMatrix 網址<br><a href="https://github.com/gorhill/uMatrix/releases" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/gorhill/uMatrix/releases</a></p>
</blockquote>
<p>因為使用 Policeman 很長一段時間了，所以這裡我主要把兩者之間的異同優劣部分做一個整理。以下整理對有使用過 Policeman 的使用者來說會比較容易理解我在說甚麼。</p>
<h2 id="uMatrix-較-Policeman-優秀之處："><a href="#uMatrix-較-Policeman-優秀之處：" class="headerlink" title="uMatrix 較 Policeman 優秀之處："></a>uMatrix 較 Policeman 優秀之處：</h2><ul>
<li>介面設計整體上更加直觀，較容易使用，尤其是引入矩陣的設計讓我覺得非常贊</li>
<li>預設放行所有的 CSS 和圖片讓入門的難度降低很多（對善於自訂的老鳥則影響不大，反正規則自己加就好）</li>
<li><p>整合了 Cookies 和快取清理的機制</p>
</li>
<li><p>刪除封鎖的 Cookies</p>
</li>
<li>定時刪除非封鎖工作階段的 Cookies</li>
<li>定時刪除本地貯存（local storage）</li>
<li>定時刪除快取</li>
<li>可訂閱的域名黑名單（省去了很多手動的麻煩）</li>
<li>針對轉址、參照、代理有更好的防護機制（選項）</li>
<li>可在維持介面的情況下對網頁重新整理</li>
<li>色盲親合設計（選項）</li>
</ul>
<p>除了最後一項的色盲親和設計外（本身無色盲困擾，對我的重要性就較低），其他的每一項優點都讓我讚嘆不已。尤其最讓我期待的是定時刪除非封鎖工作階段的 Cookies，這點只要結合白名單功能，就能完美取代 Self-Destructing Cookies，再做好備份功能就無敵了；只可惜目前作者不接受功能要求。</p>
<h2 id="uMatrix-較-Policeman-差之處："><a href="#uMatrix-較-Policeman-差之處：" class="headerlink" title="uMatrix 較 Policeman 差之處："></a>uMatrix 較 Policeman 差之處：</h2><ul>
<li>在封鎖或放行操作中，網域層級的選擇較差</li>
<li>缺乏「A允許B，B允許C」這種邏輯的呈現和設定</li>
<li>選項中自訂規則的部分較難理解和編輯（看起來有點像日文的文法）</li>
<li>選項中自訂規則沒有篩選排序的功能</li>
<li>無法細看每一個請求的連結</li>
<li>自訂完容易有連線過久或連線異常的問題發生</li>
<li>封鎖後只限於暫時封鎖，必須記得要儲存為永久</li>
</ul>
<p>總體而言，在網域層級和邏輯呈現方面 uMatrix 的表現較差。選項中自訂規則的部分也稍嫌簡陋。無法細看每一個請求的連結則無助於使用者判斷是否該放行或封鎖請求。最後兩點的敘述已相當直觀，我就不再做解釋。</p>
<p>兩者皆尚缺之處：</p>
<ul>
<li>在介面操作時對域名的自訂性仍非常缺乏</li>
<li>自訂規則之間格式不統一導致難以在各套件之間切換</li>
</ul>
<p>第一點是我認為最麻煩的部分，使用者無法在操作介面中既時使用萬用字元自訂阻擋或放行的連結，這點兩者都只能事後到選項中再做編輯。第二點則因為作者與作者之間沒有協調，或像 AdBlock Plus 與 uBlock 之間因為獨大使得後進者有例可循。雖然說 Policeman 作者有針對匯入功能相容 RequestPolicy 的格式，但也僅此而已。這點難度頗大也只能忍耐。</p>
<p>目前釋出的版本可以說僅僅只是 Chrome 版的一個複製品，但作者有提到未來會加入 Firefox 專屬功能。以 Firefox 高自由度的自訂性，成果應該相當可期。</p>
<p>消息來源：<a href="http://www.ghacks.net/2015/05/07/first-firefox-umatrix-build-created/" rel="external nofollow noopener noreferrer" target="_blank">www.ghacks.net</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跟 Policeman 一樣，uMatrix 屬於矩陣型的過濾阻擋器，最重要的是他在操作介面上比起 Policeman 更加親合，附加了更多的功能，讓資安等級更上一層樓。&lt;br&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;有長期追蹤我的文章的讀者應該都知道我對瀏覽器的阻擋
    
    </summary>
    
    
      <category term="Firefox" scheme="https://t7yang.github.io/tags/Firefox/"/>
    
      <category term="Browser" scheme="https://t7yang.github.io/tags/Browser/"/>
    
      <category term="Addons" scheme="https://t7yang.github.io/tags/Addons/"/>
    
  </entry>
  
  <entry>
    <title>[瀏覽器] 譚詠文回歸——Vivaldi 給進階的使用者瀏覽器</title>
    <link href="https://t7yang.github.io/6446/"/>
    <id>https://t7yang.github.io/6446/</id>
    <published>2015-01-27T15:06:00.000Z</published>
    <updated>2017-09-02T11:01:48.509Z</updated>
    
    <content type="html"><![CDATA[<p>「失蹤」已久的前 Opera 瀏覽器共同創辦人譚詠文接受著名科技部落格採訪，其帶著強調給進階使用者的瀏覽器 Vivaldi 強勢回歸。<br><a name="more"></a><br>譚在採訪中談到，雖然 Opera 追求的理念跟他自己的有出入，他本還以為就算離開後仍可以開心地用著這個他一手打造的瀏覽器，但事與願違，於是他跳出來打造一個跟過往理念一致的瀏覽器（為社群而生，與社群緊密聯繫）。</p>
<p>其實在這之前他已經開設 Vivaldi 社群，目的是為了讓因 Opera 關閉了自己的社群而頓失所屬的使用者們有一個歸宿。這次的帶來的新創 Vivaldi 瀏覽器其實跟多數的新創瀏覽器一樣——依附在 Google 的 Chromium 計畫底下，譚覺得這樣的選擇是出於安全考量。</p>
<p>目前這個計畫僅僅是一個只有 25 人的團隊，因此若想自己開發排版引擎是不現實的，再者 Opera 目前仍沒有把已經停止對外更新的 Presto 引擎釋出原始碼（仍用於他們的郵件管理器中），所以在橋歸橋、路歸路的情況下譚應該也無法合法地使用這個曾經是他和伙伴一起打造的瀏覽器核心。</p>
<p>身為計劃的獨資者，譚對瀏覽器的發展方向有著重大的決策權，其中可以確定的是譚一直偏好瀏覽器具備郵件管理能力這件事會讓 Vivaldi 不會缺席這項功能。對於公司未來的財源，他會考慮一般瀏覽器常見的做法，譬如與搜尋引擎廠商合作。</p>
<h2 id="Vivaldi-使用心得簡述："><a href="#Vivaldi-使用心得簡述：" class="headerlink" title="Vivaldi 使用心得簡述："></a>Vivaldi 使用心得簡述：</h2><p>從 Vivaldi 的介面設計不能看出殘留著不少 Opera 15- 的影子，譬如側邊欄、右上角的垃圾桶（已關閉分頁）、完整的狀態列（下方）、內建快速撥號、切換頁面的圖片顯示與否……。</p>
<p>但認真說，雖然整體的風格類似於微軟 Metro 設計，但目前的介面稱不上美觀。另外仍處於預覽版狀態，功能缺失也相當嚴重，一些基本設定也沒有，諸如字型設定、介面語言（歐洲語系居多）。</p>
<p>至於速度部分，因為 Vivaldi 是基於 Chromium，所以實際的體驗相差無幾。但這造成安裝後的檔案相當龐大，程式和所有依附的檔案接近 300 MB。消耗記憶體的部分不惶多讓，在開啟一個快速撥號和一個網頁時就消耗將近 460MB 的記憶體和 350MB 的分頁檔。</p>
<p>較為特殊應該是，跟一般的瀏覽器不同，Vivaldi 在點選網頁會看太不到網頁載入，而是一瞬間出現新的網頁，但也因此會有點覺得點了之後沒反應的感覺。</p>
<p>整體而言，Vivaldi 現階段不適用於當作日常使用的瀏覽器，未來的發展會如何仍有待觀察。當然就個人的情感而言，對 Jon 還是相當支持，也希望未來 Vivaldi 能夠擺脫 Chromium。</p>
<p><a href="https://docs.google.com/document/d/1mltmMCjDsU7h0xVmTH38BpUHlxlRGugmwe6pKi1ByGI/edit?usp=sharing" rel="external nofollow noopener noreferrer" target="_blank">資訊來源</a>：<br><a href="https://www.ptt.cc/bbs/Browsers/M.1422352062.A.E06.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.ptt.cc/bbs/Browsers/M.1422352062.A.E06.html</a><br><a href="http://techcrunch.com/2015/01/27/vivaldi-the-four-browsers" rel="external nofollow noopener noreferrer" target="_blank">http://techcrunch.com/2015/01/27/vivaldi-the-four-browsers</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;「失蹤」已久的前 Opera 瀏覽器共同創辦人譚詠文接受著名科技部落格採訪，其帶著強調給進階使用者的瀏覽器 Vivaldi 強勢回歸。&lt;br&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;譚在採訪中談到，雖然 Opera 追求的理念跟他自己的有出入，他本還以為就算離開後仍可
    
    </summary>
    
    
      <category term="Browser" scheme="https://t7yang.github.io/tags/Browser/"/>
    
      <category term="Article/Translation" scheme="https://t7yang.github.io/tags/Article-Translation/"/>
    
  </entry>
  
  <entry>
    <title>[瀏覽器] Userscript.org 無預警掛點之其他選項</title>
    <link href="https://t7yang.github.io/6449/"/>
    <id>https://t7yang.github.io/6449/</id>
    <published>2014-05-10T19:26:00.000Z</published>
    <updated>2017-09-02T11:03:36.185Z</updated>
    
    <content type="html"><![CDATA[<p>如果你最近有在關注 Userscript.org 這個最知名的 US 網站，你會發現它大概已經無預警的掛點超過三天了，而且這樣事情之前也發生過。或許該考慮看看有哪些備選方案了。</p>
<p><a name="more"></a>按說一般人沒事大概不會去開 userscript.org 來看看他是否還活著。當然，我也是這麼剛好重新整理瀏覽器時要安裝 US 才發現的。然後一連掛了好幾天，而且網路上也似乎沒看到甚麼人在討論，正當納悶時，又是 <a href="http://www.ghacks.net/2014/05/09/userscripts-org-good-alternatives/" rel="external nofollow noopener noreferrer" target="_blank">ghacks</a> 率先出來報導。</p>
<p>根據 ghacks 的說法，userscript.org 沒有出來說明任何網站掛點的理由，也否認了伺服器遭到攻擊的說法。接二連三的出狀況，其實我想一般人應該也對 userscript.org 失去信心了。</p>
<p>ghacks 為此選出了其他兩個類似的網站（原文是說三個選項，這裡為何掠過第三，有興趣請自己去看原文囉）作為替代 userscript.org 的備選方案。</p>
<ul>
<li><a href="https://greasyfork.org/" rel="external nofollow noopener noreferrer" target="_blank">GreasyFork</a></li>
<li><a href="https://openuserjs.org/" rel="external nofollow noopener noreferrer" target="_blank">OpenUserJS.org</a><br>上述兩者都是類似 userscript.org 的網站，更重要是，你不須改變你的使用習慣，也就是現行 userscript 套件——無論是 greasemonkey 還是 scriptish——都可以直接安裝上述兩個網站的 script。</li>
</ul>
<p>當然，目前這兩個網站仍處於草創的階段，script 的數量還遠遠不及老大哥。不過可以確認的是，如果 userscript.org 繼續擺爛下去的話，開發者很可能會集體跳槽到上述兩個網站去，尤其是前者，之前經歷過一輪的報導，算是已經小有知名度了。</p>
<p>補充：<br>ghacks 更新了文章說到，目前仍可以透過指定埠號的方式來開啟 userscript.org，網址如下：<a href="http://userscripts.org:8080/" rel="external nofollow noopener noreferrer" target="_blank">http://userscripts.org:8080/</a></p>
<p>消息來源：<a href="http://www.ghacks.net/2014/05/09/userscripts-org-good-alternatives/" rel="external nofollow noopener noreferrer" target="_blank">ghacks</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你最近有在關注 Userscript.org 這個最知名的 US 網站，你會發現它大概已經無預警的掛點超過三天了，而且這樣事情之前也發生過。或許該考慮看看有哪些備選方案了。&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;按說一般人沒事大概不會去開 userscri
    
    </summary>
    
    
      <category term="Browser" scheme="https://t7yang.github.io/tags/Browser/"/>
    
  </entry>
  
  <entry>
    <title>[入手] KBT RACE II 白光 紅軸</title>
    <link href="https://t7yang.github.io/20776/"/>
    <id>https://t7yang.github.io/20776/</id>
    <published>2014-03-12T10:52:00.000Z</published>
    <updated>2017-09-02T10:02:19.326Z</updated>
    
    <content type="html"><![CDATA[<p>原本預計二月底就會發貨的 KBT RACE II，歷經一些問題後終於在今天拿到貨了（開心）。第一把紅軸就獻給了 KBT 了。廢話不多，就直接給各位欣賞照片了好了。<br><a name="more"></a></p>
<p><blockquote class="imgur-embed-pub" lang="en" data-id="a/HVZl4"><a href="//imgur.com/HVZl4">KBT-RACE-II</a></blockquote><script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script></p>
<p>其實因為上一個用的ＣＭ的ＴＫ（配置上超級詭異的鍵盤），所以就算重新回到我最喜歡的７５％鍵盤，一開始還是有點不習慣。而且紅軸的輕柔無聲和青軸的清脆喧嘩有相當大的反差，看來又要過一段適應期了。如果朋友那把茶軸要賣的話，可能會考慮敗下來。一方面是囤貨，一方面是如果在兩個地方工作的話也不需要有適應的問題（不過這大概又要噴一筆了）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原本預計二月底就會發貨的 KBT RACE II，歷經一些問題後終於在今天拿到貨了（開心）。第一把紅軸就獻給了 KBT 了。廢話不多，就直接給各位欣賞照片了好了。&lt;br&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;imgur-
    
    </summary>
    
    
      <category term="Buy" scheme="https://t7yang.github.io/tags/Buy/"/>
    
      <category term="Essay" scheme="https://t7yang.github.io/tags/Essay/"/>
    
      <category term="Keyboard" scheme="https://t7yang.github.io/tags/Keyboard/"/>
    
  </entry>
  
  <entry>
    <title>[O2FP] FXOpera 讓你找回 Opera 的「人」</title>
    <link href="https://t7yang.github.io/7104/"/>
    <id>https://t7yang.github.io/7104/</id>
    <published>2014-01-04T14:17:00.000Z</published>
    <updated>2017-09-02T11:23:42.355Z</updated>
    
    <content type="html"><![CDATA[<p>有一句話叫做「我就算得不到你的心，也要得到你的人」。在 Opera 決定以 Chromium 為底進行開發後，我就轉用 Firefox 了。但是說實在的，Firefox 預設的主題不只和 Opera 長得一點都不像之外，而且還蠻難看的。借助 FXOpera 這個完整的 Firefox 主題，你可以把你的 Firefox 變身為最新版的 Opera 介面主題。</p>
<p><a name="more"></a></p>
<p>這篇其實沒有甚麼技巧需要特別交代，簡單講就是去安裝 FXOpera 這個主題到你的 Firefox，然後重新開啟你的 Firefox 就好了。比較可惜的是，目前完全找不到類似 Opera 12.16 的設計主題，這個 FXOpera 仿的是最新版（Blink 排版引擎）的 Opera 主題。</p>
<blockquote>
<p>名稱：FXOpera<br>網址：<a href="https://addons.mozilla.org/firefox/addon/fxopera/" rel="external nofollow noopener noreferrer" target="_blank">https://addons.mozilla.org/firefox/addon/fxopera/</a><br>作者：<a href="https://addons.mozilla.org/zh-TW/firefox/user/dkgo/" rel="external nofollow noopener noreferrer" target="_blank">dkgo</a><br>稍微可以特別說明一下大概就是這個作者基本上是以設計仿其他瀏覽器的主題為主，他旗下的作品還有仿 Chrome 和 Maxthon 的主題，如果你覺得既然都不用 Opera 了，也不需要特別留戀甚麼的話（反而觸景傷情），那倒是可以試試這個作者的其他作品，我覺得都還不賴。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有一句話叫做「我就算得不到你的心，也要得到你的人」。在 Opera 決定以 Chromium 為底進行開發後，我就轉用 Firefox 了。但是說實在的，Firefox 預設的主題不只和 Opera 長得一點都不像之外，而且還蠻難看的。借助 FXOpera 這個完整的 Fi
    
    </summary>
    
    
      <category term="Firefox" scheme="https://t7yang.github.io/tags/Firefox/"/>
    
      <category term="O2FP" scheme="https://t7yang.github.io/tags/O2FP/"/>
    
      <category term="Browser" scheme="https://t7yang.github.io/tags/Browser/"/>
    
      <category term="Firefox Appearance" scheme="https://t7yang.github.io/tags/Firefox-Appearance/"/>
    
  </entry>
  
  <entry>
    <title>[Windows] 如何移除 8.1 討人厭的檔案總管側邊欄和資料夾</title>
    <link href="https://t7yang.github.io/14642/"/>
    <id>https://t7yang.github.io/14642/</id>
    <published>2013-11-11T13:06:00.000Z</published>
    <updated>2017-09-02T11:26:24.730Z</updated>
    
    <content type="html"><![CDATA[<p>更新 Windows 8.1 後，相信肯定有不少人對新的檔案總管厭惡異常吧。沒必要的多加了六個資料夾在視窗中、側邊欄的「本機」子選單中硬塞給同樣的資料夾，微軟設計師的蠢又毫無疑問華麗的體現了一把（心理學家是否可以研究一下為什麼微軟都會搞出爛設計）。蒐集了一下移除的方法，一次過把它整理出來。</p>
<p><a name="more"></a></p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/Windows_8_1_This_PC_Explorer.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/Windows_8_1_This_PC_Explorer.png" alt="" title=" "></a><br>圖片來源：AskVG.com</p>
<p>新的檔案總管預設加了一堆不必要的重複資料夾，只會對使用者造成困擾而已。</p>
<blockquote>
<p>警告：<br>本篇只整理如何移除的方法，不負責幫你把移除的項目找回來，因此請三思後行。</p>
<p>為了方便讀者快速移除，特別提供 <a href="http://1drv.ms/1t8gku4" rel="external nofollow noopener noreferrer" target="_blank">reg</a> 檔有需要請自行下載。</p>
</blockquote>
<h2 id="移除側邊欄「本機」子選單的資料夾"><a href="#移除側邊欄「本機」子選單的資料夾" class="headerlink" title="移除側邊欄「本機」子選單的資料夾"></a>移除側邊欄「本機」子選單的資料夾</h2><p>其實要移除子選單中的資料夾比想像中的要來得簡單很多，只需要對本機重新命名即可。</p>
<ol>
<li>開啟檔案總管。</li>
<li>右鍵點選側邊欄中的［本機］。</li>
<li>在彈出的右鍵選單中選擇［重新命名］（直接點選［本機］後按［F2］也可以）。</li>
<li>隨便輸入一個名稱，並按下［Enter］確認，這時你就會發現那些廢物的資料夾消失了。</li>
<li>如果你還是喜歡選單的名稱為「本機」的話，你可以再次根據前面的步驟把它改回「本機」的名稱。</li>
</ol>
<h2 id="移除「裝置和磁碟機」上方的資料夾"><a href="#移除「裝置和磁碟機」上方的資料夾" class="headerlink" title="移除「裝置和磁碟機」上方的資料夾"></a>移除「裝置和磁碟機」上方的資料夾</h2><p>這個比較麻煩，因為需要動到系統登錄檔，不過只要按著下面的步驟執行，很快就可以移除掉了。</p>
<ol>
<li>按下快捷鍵［Winkey］＋［R］，輸入「regedit<strike>regdit</strike>」，開啟「登錄編輯程式」。或按下［Winkey］進去開始頁面，直接輸入「regedit」也行。</li>
<li>進入以下的路徑<code>：HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Current Version\explorer\MyComputer\NameSpace</code>。</li>
<li>刪除這些選單（你可以在刪除前右鍵匯出備份登錄檔）：</li>
</ol>
<ul>
<li><code>{1CF1260C-4DD0-4ebb-811F-33C572699FDE}</code>（「音樂」資料夾）</li>
<li><code>{374DE290-123F-4565-9164-39C4925E467B}</code>（「下載」資料夾）</li>
<li><code>{3ADD1653-EB32-4cb0-BBD7-DFA0ABB5ACCA}</code>（「圖片」資料夾）</li>
<li><code>{A0953C92-50DC-43bf-BE83-3742FED03C9C}</code>（「視訊」資料夾）</li>
<li><code>{A8CDFF1C-4878-43be-B5FD-F8091C1C60D0}</code>（「文件」資料夾）</li>
<li><code>{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}</code>（「桌面」資料夾）4.  移除後，重新整理檔案總管（或關掉重開一次檔案總管）那些資料夾就不見囉。<br>更多關於如何移除檔案總管中不要想要的項目資訊（譬如移除「家用群組」和「網路」），請自行參考下方的本文資料來源。</li>
</ul>
<p>來源：<a href="http://www.askvg.com/tips-tweak-and-customize-windows-8-1-explorer-this-pc/" rel="external nofollow noopener noreferrer" target="_blank">AskVG.com</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;更新 Windows 8.1 後，相信肯定有不少人對新的檔案總管厭惡異常吧。沒必要的多加了六個資料夾在視窗中、側邊欄的「本機」子選單中硬塞給同樣的資料夾，微軟設計師的蠢又毫無疑問華麗的體現了一把（心理學家是否可以研究一下為什麼微軟都會搞出爛設計）。蒐集了一下移除的方法，一次
    
    </summary>
    
    
      <category term="Explorer" scheme="https://t7yang.github.io/tags/Explorer/"/>
    
      <category term="System" scheme="https://t7yang.github.io/tags/System/"/>
    
      <category term="Windows" scheme="https://t7yang.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>[O2FP] 設定 Firefox 快取路徑且在關閉後刪除隱私資料</title>
    <link href="https://t7yang.github.io/10909/"/>
    <id>https://t7yang.github.io/10909/</id>
    <published>2013-08-04T18:12:00.000Z</published>
    <updated>2017-09-02T11:21:00.463Z</updated>
    
    <content type="html"><![CDATA[<p>基本上從 Opera 轉到 Firefox 在快取設定是不會遇到太大的問題。嚴格來說，Firefox 快取的設定上還比 Opera 更完善，然而在關閉後刪除特定快取和個人隱私的部分和快取路徑設定之間會碰到一定的問題。</p>
<p><a name="more"></a></p>
<p>雖然 Firefox 在隱私資料和快取的選項上比起 Opera 算是有過之而無不及，但針對自訂快取目錄和關閉瀏覽器後刪除特定隱私資料之間卻必須做出妥協——<strong>也就說當你自訂了快取路徑後，就無法使用「結束 Firefox 時清理歷史記錄」</strong>；這也是我在轉用 Firefox 後最大的不習慣地方。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings01.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings01.png" alt=""></a></p>
<p>從上圖中（紅色框中）你可以選擇瀏覽器對隱私資料處理方式，然而一旦勾選了「結束 Firefox 時清理歷史記錄」，則 Firefox 會自動停用自訂磁碟快取目錄功能，使得你無法指定快取路徑。這對有習慣把快取目錄指定到 RAMDISK 的使用者來說相當不方便。</p>
<blockquote>
<p>Firefox 的記憶體快取：<br>RAMDISK 是不少人拿來加速系統效能的一種手段，然而這樣的作法對一般的使用者並不親切。因此如果你沒有使用 RAMDISK 的習慣，又想加速 Firefox 快取的效能，最好的做法是使用磁碟快取背道而馳的「完全關閉磁碟快取」並經可能讓瀏覽起來關係記憶體快取的大小。</p>
<p>如此 Firefox 會把快取都放置到記憶體中來加速快取存取的效果（但下載中的暫存還是存放在系統的暫存目錄），下文還會提到調整記憶體快取的設定。<br>接下來要說明如何使用自訂快取目錄的同時還可以讓瀏覽器在關閉後自動刪除特定的隱私資料：</p>
</blockquote>
<ol>
<li>首先開啟 about:config，右鍵叫出選單，選擇新增→字串，把這個字串貼上「browser.cache.disk.parent_directory」。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings02.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings02.png" alt=""></a>  <a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings03.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings03.png" alt=""></a>2.  輸入你要指定的路徑。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings04.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings04.png" alt=""></a>3.  安裝「Click&amp;Clean」附加元件，然後重新啟動瀏覽器，附加元件和快取路徑就會開始生效。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings05.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings05.png" alt=""></a>4.  重新啟動後，網址列旁會顯示 Click&amp;Clean 的圖示，點開選單選擇「Preferences」。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings06.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings06.png" alt=""></a>5.  確保你勾選了「Clear browsing data when browser closes」，這樣附加元件就會在瀏覽器關閉後自動清除隱私資料。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings07.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/FirefoxCacheSettings07.png" alt=""></a>6.  點選「Clear private data」可以選擇當關閉瀏覽器後要刪除哪些資料。你可以選擇清除的時間範圍和清除的項目。手動清除後一次後元件就會記住你的選擇了。<br><h9>調整快取大小上限</h9><br>無論是記憶體快取還是磁碟快取，Firefox 都提供了快取大小上限的選項。磁碟快取上限的選項可以到圖形介面的「選項」中設定，記憶體快取上限則只能透過 about:config。</li>
</ol>
<ul>
<li>把以下兩個字串貼上 about:config 中搜尋，修改其值就可以改變快取上限的大小，單位為 KB（256000 = 256MB）<br><h9>記憶體快取或 RAMDISK？提升 Firefox 效能</h9><br>其實無論是記憶體快取還是 RAMDISK 都是利用記憶體來加速 Firefox 在存取快取資料時的效率，只是對原本已經切取部分記憶體來做 RAMDISK 的人來說，想要自訂快取目錄又想在關閉瀏覽器時刪除特定的隱私資料就需要借助附加元件的額外功能，Firefox 本身無法辦到這點；這也是從 Opera 轉過來的使用者比較難理解的地方。</li>
</ul>
<p><strong>如果你不使用 RAMDISK，則建議直接關閉磁碟快取，完全以記憶體快取為主</strong>，同時讓瀏覽器自動管理記憶體快取大小上限，配合內建的隱私資料管理，基本上不會有太多困擾。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基本上從 Opera 轉到 Firefox 在快取設定是不會遇到太大的問題。嚴格來說，Firefox 快取的設定上還比 Opera 更完善，然而在關閉後刪除特定快取和個人隱私的部分和快取路徑設定之間會碰到一定的問題。&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/
    
    </summary>
    
    
      <category term="Firefox" scheme="https://t7yang.github.io/tags/Firefox/"/>
    
      <category term="Firefox Settings" scheme="https://t7yang.github.io/tags/Firefox-Settings/"/>
    
      <category term="O2FP" scheme="https://t7yang.github.io/tags/O2FP/"/>
    
      <category term="Firefox Cache" scheme="https://t7yang.github.io/tags/Firefox-Cache/"/>
    
  </entry>
  
  <entry>
    <title>[O2FP] 如何讓 Firefox 用起來像 Opera (Presto) 完整教學</title>
    <link href="https://t7yang.github.io/552/"/>
    <id>https://t7yang.github.io/552/</id>
    <published>2013-08-04T08:29:00.000Z</published>
    <updated>2017-09-02T11:20:10.690Z</updated>
    
    <content type="html"><![CDATA[<p>因為設計的理念不同，因此為了要讓 Firefox 能夠具備 Opera Presto 版的使用體驗，必須要從內部設定、UserStyle / UserScript / userChrome（CSS、JS）、延伸套件（Firefox 稱為附加元件）方面著手，改造的理念會先以能夠透過內部設定為優先，延伸套件作為最後的選項。但是有時為了能夠更方便使用者備份，會選擇性以延伸套件為優先解決方案，然而文章內還是盡可能把其他替代方案列出讓讀者選擇。</p>
<p><a name="more"></a></p>
<blockquote>
<p>文章待續中……不時更新<br>完整項目請參考 <a href="https://docs.google.com/spreadsheet/ccc?key=0AkY2yayFmcCqdFprSVVlZjkzX3FjOVN1aWxaa2FtcUE&amp;usp=sharing" rel="external nofollow noopener noreferrer" target="_blank">O2FP</a> 工作表<br>在改造的過程中會使用到 UserStyle 和 UserScript，因此建議讀者務必先安裝可以管理兩者的延伸套件。以下為幾個類似功能的套件，粗體者為 t7 目前正在使用的套件。</p>
</blockquote>
<ul>
<li>UserStyle</li>
<li><a href="https://addons.mozilla.org/firefox/addon/stylish" rel="external nofollow noopener noreferrer" target="_blank"><strong>Stylish</strong></a>- UserScript</li>
</ul>
<h2 id="內部設定"><a href="#內部設定" class="headerlink" title="內部設定"></a>內部設定</h2><p>在內部設定中，我們可以調整四個選項，其中兩個是讓 Firefox 用起來更像 Opera，另外兩個則是關閉一些惱人的提示。</p>
<ul>
<li><a href="http://t7yang.blogspot.com/2013/08/tweak-firefox-settings.html" rel="external nofollow noopener noreferrer" target="_blank">調整 Firefox 內部設定</a></li>
</ul>
<h2 id="字型設定"><a href="#字型設定" class="headerlink" title="字型設定"></a>字型設定</h2><p>Firefox 的字型設定較 Opera 來得複雜且麻煩，但 O2FP 的計畫已經解決字型設定的問題，現在你可以指定你喜歡的字型來作為瀏覽器顯示中文的方式。</p>
<ul>
<li><a href="http://t7yang.blogspot.com/2013/08/tweak-firefox-font-settings.html" rel="external nofollow noopener noreferrer" target="_blank">Firefox 字型調整</a></li>
</ul>
<h2 id="快取管理"><a href="#快取管理" class="headerlink" title="快取管理"></a>快取管理</h2><p>Firefox 的快取設定同樣較 Opera 來的麻煩，在這裡教你如何在指定快取路徑的同時還可以做到關閉瀏覽器後自動刪除快取和隱私資訊的方法，讓你回到那個熟悉的 Opera 快取和隱私管理行為。</p>
<ul>
<li><a href="http://t7yang.blogspot.com/2013/08/delete-private-data-after-closed-firefox-with-diskcache.html" rel="external nofollow noopener noreferrer" target="_blank">設定 Firefox 快取路徑且在關閉後刪除隱私資料</a></li>
</ul>
<h2 id="介面調整"><a href="#介面調整" class="headerlink" title="介面調整"></a>介面調整</h2><p>Firefox 的介面雖然和 Opera 頗為相似，但仍免不了在細節上有些差異，這裡會教你如何調整標題列與分頁列的在視窗非最大化時的高度，同時還會推薦幾個不錯的 Firefox 主題，讓你可以得不到它的「人」也可以得到它的「皮」。</p>
<ul>
<li><a href="http://t7yang.serveblog.net/2014/01/FXOpera.html" rel="external nofollow noopener noreferrer" target="_blank">FXOpera 讓你找回 Opera 的「人」</a></li>
</ul>
<h2 id="找回-Opera-的功能"><a href="#找回-Opera-的功能" class="headerlink" title="找回 Opera 的功能"></a>找回 Opera 的功能</h2><p>Opera 內建功能之強大是舉世公認的，這樣的設計理念和其他主流瀏覽器有很大的差異（雖然新一代 Opera 瀏覽器已經把這種設計理念完全拋棄）。為此我們幾乎需要借助眾多 Firefox 的延伸套件才能重構出與原本 Opera 類似的使用體驗。以下是我們在 Firefox 中要找回來的功能。</p>
<h2 id="找回你習慣的行為"><a href="#找回你習慣的行為" class="headerlink" title="找回你習慣的行為"></a>找回你習慣的行為</h2><p>Opera 內建的選項貼心，讓使用者打造出他們最喜歡的使用習慣，尤其在一些瀏覽器的行為上；這點是其他瀏覽器所不具備的。因此我需要藉助延伸套件的方式才能把一些我們很熟悉的瀏覽器行為找回來，這裡涉及的通常是如何調整一些分頁和視窗的行為，我會拆開幾個部分來說明。</p>
<h2 id="找回你熟悉的鍵鼠快捷鍵"><a href="#找回你熟悉的鍵鼠快捷鍵" class="headerlink" title="找回你熟悉的鍵鼠快捷鍵"></a>找回你熟悉的鍵鼠快捷鍵</h2><p>除了滑鼠手勢外，一些其他的鍵盤快捷鍵和滑鼠行為也是 Opera 相當引以為傲的地方。我不會在這裡說明滑鼠手勢，而是找回一兩個 Opera 原本的習慣和一些你可能不知道 Firefox 可以這樣用的快捷鍵。</p>
<h2 id="找回你想要的延伸套件"><a href="#找回你想要的延伸套件" class="headerlink" title="找回你想要的延伸套件"></a>找回你想要的延伸套件</h2><p>雖然 Opera 是最晚入場延伸套件的瀏覽器，但這無阻它擁有一些殺手級延伸套件。一旦離開 Opera 你肯定會懷念這些套件，因此如何在 Firefox 中找到足夠好的替代品，就成了當務之急。這裡會列出一些我原本在 Opera 就有安裝的套件和它們在 Firefox 上的對應替代選項，當然還有一些不是在這裏面的，但我相信它們對提升 Firefox 應該有很大的幫助。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因為設計的理念不同，因此為了要讓 Firefox 能夠具備 Opera Presto 版的使用體驗，必須要從內部設定、UserStyle / UserScript / userChrome（CSS、JS）、延伸套件（Firefox 稱為附加元件）方面著手，改造的理念會先以能
    
    </summary>
    
    
      <category term="Firefox" scheme="https://t7yang.github.io/tags/Firefox/"/>
    
      <category term="O2FP" scheme="https://t7yang.github.io/tags/O2FP/"/>
    
  </entry>
  
  <entry>
    <title>[O2FP] Firefox 字型調整</title>
    <link href="https://t7yang.github.io/64400/"/>
    <id>https://t7yang.github.io/64400/</id>
    <published>2013-08-01T16:34:00.000Z</published>
    <updated>2017-09-02T11:23:31.209Z</updated>
    
    <content type="html"><![CDATA[<p>字型設定對 Opera 來說非常容易，簡單的一行 CSS 就可以搞定，但是到了 Firefox 就沒那麼簡單了。因為開發者在設計上的缺失，使得我們必須透過內部設定和較複雜 CSS 才能夠克服字型設定的問題。</p>
<p><a name="more"></a></p>
<p>先決條件：</p>
<ul>
<li><a href="https://addons.mozilla.org/firefox/addon/stylish" rel="external nofollow noopener noreferrer" target="_blank">Stylish</a></li>
<li>微軟正黑體或其他你喜歡的字型（下文會以正黑體為例）<br>Stylish 是因為我們需要使用自訂 CSS 的方式來控制網頁使用的字型，原則上把 CSS 程式碼貼在 userChome.css 內也是可行的，只是有 Stylish 的管理會更加方便。字型的部分，我所提供的 MSJhengHei Style 使用的是微軟正黑體，如果你的系統沒有正黑體或你有自己偏好的字型，也可以字型新增在 local(“Microsoft JhengHei”) 前面。</li>
</ul>
<h2 id="內部字型設定"><a href="#內部字型設定" class="headerlink" title="內部字型設定"></a>內部字型設定</h2><ol>
<li>點選進入瀏覽器的「選項」<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont01.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont01.png" alt=""></a>2.  切換分頁到「內容」，點選字型與顏色的「進階」按鈕。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont02.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont02.png" alt=""></a>3.  如圖所示把字型都改為「微軟正黑體」（等款字型不改沒關係）。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont03.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont03.png" alt=""></a>4.  接著切換到「簡體中文」，然後依序把字型都改為正黑體。<br>完成設定後，你可以開啟網頁來看看。基本上多數的台灣網站都會自動使用剛剛設定的正黑體來顯示，但是一些像報社的網站仍會以細明體來顯示。可以再試試看對岸的網站，幾乎全都失敗，網站完全不會以正黑體來顯示。</li>
</ol>
<blockquote>
<p>t7 補充：<br>當然你可以回到字型選項中把「優先使用網站指定的字型」選像取消勾選。但這樣會導致瀏覽器完全忽視網站的字型設定，進而使得一些網站指定使用圖示字型和等寬字型的設定被忽略，造成圖示字型變成亂碼和文字游標錯位的問題。這就是 Firefox 開發者失敗的地方，基本我把這樣的情況歸類為 Bug，但我想他們應該不會承認。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont05.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont05.png" alt=""></a><br>套用 UseStyle 指定中文應該使用的字型<br>MSJhengHei Style 是由我和若干位 PTT 的板友一起努力完成的。透過這個 UserStyle 我們就可以正確地指定網站的中文應該要使用哪個中文字型來顯示。如果你對這個 UserStyle 有任何改進的建議或指教也非常歡迎聯絡我。<br>如何取得 MSJhengHei Style：<br>直接到<a href="http://pastebin.com/cTkZTBD1" rel="external nofollow noopener noreferrer" target="_blank">發布網站</a>下載或透過「<a href="https://docs.google.com/spreadsheet/ccc?key=0AkY2yayFmcCqdFprSVVlZjkzX3FjOVN1aWxaa2FtcUE#gid=9" rel="external nofollow noopener noreferrer" target="_blank">O2FP</a>」的 UserScript / Style 工作表連線到發布網站</p>
</blockquote>
<ol>
<li>確保你已經安裝好 Stylish。</li>
<li>全選並複製「<a href="http://pastebin.com/cTkZTBD1" rel="external nofollow noopener noreferrer" target="_blank">MSJhengHei Style vx.x (For Firefox)</a>」的程式碼。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont06.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont06.png" alt=""></a></li>
<li>在左上角開啟「附加元件」。<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont07.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont07.png" alt=""></a></li>
<li>切換到 Stylish 頁面並點選〔編寫新樣式〕<br><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont08.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont08.png" alt=""></a></li>
<li>把程式碼貼在內容區，輸入名稱後按下儲存即可。</li>
</ol>
<blockquote>
<p>text-shadow 陰影效果：<br>如果沒有安裝系統美化工具 Mactype 或其他類似的替代品又想要體驗文字陰影效果的話，你可以回到編輯器中把 <code>body {……}</code> 前後的註解符號 <code>/* */</code> 刪除並儲存即可。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont11.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont11.png" alt=""></a><br>另外，某些顯示卡在啟用瀏覽器的硬體加速後，就算安裝了 Mactype 等工具也無法有效成像陰影效果的文字，這時就一定借助 text-shadow 的效果了。</p>
</blockquote>
<p>最後我們來看看一個調整前後的比較圖。從下圖你可以很清楚地看到預設的字型設定和經過調整後的字型設定，何者更佳，相信你心中應該有答案了。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont10.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/TweakFirefoxFont10.png" alt=""></a></p>
<blockquote>
<p>如果你發現某些網站無法正確使用指定字型來顯示中文的話，可以把網址傳送給我，我會進行更新。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;字型設定對 Opera 來說非常容易，簡單的一行 CSS 就可以搞定，但是到了 Firefox 就沒那麼簡單了。因為開發者在設計上的缺失，使得我們必須透過內部設定和較複雜 CSS 才能夠克服字型設定的問題。&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p
    
    </summary>
    
    
      <category term="Firefox" scheme="https://t7yang.github.io/tags/Firefox/"/>
    
      <category term="Firefox Font Settings" scheme="https://t7yang.github.io/tags/Firefox-Font-Settings/"/>
    
      <category term="Firefox Settings" scheme="https://t7yang.github.io/tags/Firefox-Settings/"/>
    
      <category term="O2FP" scheme="https://t7yang.github.io/tags/O2FP/"/>
    
      <category term="UserStyle" scheme="https://t7yang.github.io/tags/UserStyle/"/>
    
  </entry>
  
  <entry>
    <title>[O2FP] 調整 Firefox 內部設定</title>
    <link href="https://t7yang.github.io/28832/"/>
    <id>https://t7yang.github.io/28832/</id>
    <published>2013-08-01T13:00:00.000Z</published>
    <updated>2017-09-02T11:21:16.967Z</updated>
    
    <content type="html"><![CDATA[<p>從 Opera 轉用 Firefox 後肯定會遇到很多不適應的情況，然而因為設計理念與結構的不同，可以從內部設定去調整的空間其實不大，但這樣的做法仍是首選，因為它的代價最小。我會盡可能蒐集一些可調整的內部設定，以下是目前所蒐集到的成果。<br><a name="more"></a><br>雖然這裡介紹的只有四個內部設定，但其實在整個 O2F 計畫中用到的遠多於這些，但為了在分類上做到比較精細，因此這裡只會羅列那些沒有被歸類到大分類項目的內部設定。</p>
<h2 id="調整為與-Opera-類似的行為"><a href="#調整為與-Opera-類似的行為" class="headerlink" title="調整為與 Opera 類似的行為"></a>調整為與 Opera 類似的行為</h2><blockquote>
<p>路徑：browser.link.open_newwindow.restriction<br>預設值：2<br>預設行為：瀏覽器會根據 JS 的規定選擇連結是否以新的彈出視窗開啟<br>建議值：0<br>調整後行為：不允許 JS 使用彈出視窗的方式開啟連結<br>路徑：browser.tabs.closeWindowWithLastTab<br>預設值：TRUE<br>預設行為：關閉視窗中僅有的唯一分頁會關閉整個 Firefox<br>建議值：FALSE<br>調整後行為：唯一的分頁可關閉，且關閉後會彈出首頁</p>
<p><h9>可提升 Firefox 可用性</h9><br>路徑：accessibility.typeaheadfind.enablesound<br>預設值：TRUE<br>預設行為：文內搜尋錯誤時播放提示音效<br>建議值：FALSE<br>調整後行為：關閉文內搜尋錯誤提示音效<br>路徑：browser.download.manager.showAlertOnComplete<br>預設值：TRUE<br>預設行為：下載完成後顯示彈出方塊提醒<br>建議值：FALSE<br>調整後行為：關閉方塊提醒，下載管理圖示已有下載完成特效<br>未來若有發現其他能替提升可用性或讓 Firefox 更接近 Opera 設計的內部設定，還會透過編輯新增的方式來修改此文章。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;從 Opera 轉用 Firefox 後肯定會遇到很多不適應的情況，然而因為設計理念與結構的不同，可以從內部設定去調整的空間其實不大，但這樣的做法仍是首選，因為它的代價最小。我會盡可能蒐集一些可調整的內部設定，以下是目前所蒐集到的成果。&lt;br&gt;&lt;a name=&quot;more&quot;&gt;
    
    </summary>
    
    
      <category term="Firefox" scheme="https://t7yang.github.io/tags/Firefox/"/>
    
      <category term="Firefox Settings" scheme="https://t7yang.github.io/tags/Firefox-Settings/"/>
    
      <category term="O2FP" scheme="https://t7yang.github.io/tags/O2FP/"/>
    
  </entry>
  
  <entry>
    <title>[翻譯學堂] 你應該知道的 10 個有用的 CMD 指令</title>
    <link href="https://t7yang.github.io/46275/"/>
    <id>https://t7yang.github.io/46275/</id>
    <published>2013-08-01T09:17:00.000Z</published>
    <updated>2017-09-02T11:10:00.195Z</updated>
    
    <content type="html"><![CDATA[<p>這次帶來的是 HTG 近期的文章，關於 10 個對你有幫助的命令提示字元指令。有幾個真的應該記起來，像 ipconfig 這類查看 IP 資訊的指令真的非常好用。</p>
<p><a name="more"></a></p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD01.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD01.png" alt=""></a></p>
<p>就算是在 Windows 的環境底下，有些事情你仍需要在命令提示字元下執行，接下來介紹的指令有些是完全沒有圖形介面，有些則是透過指令的方式可以執行得更快。<br>本篇文章當然沒辦法涵蓋所有有用的命令提示字元或 PowerShell 的指令。所以我們會集中在介紹一些對就算不是指令高手也會用到的指令。</p>
<p>＃譯者說明：</p>
<blockquote>
<p>想要快速開啟「命令提示字元」視窗其實很簡單：</p>
<ol>
<li>按下鍵盤的〔WinKey〕+〔R〕，輸入「cmd」後按下〔Enter〕（適用於 Windows 版本皆有效）。</li>
<li>按下鍵盤的〔WinKey〕進入開始選單或開始頁面，輸入「cmd」後按下〔Enter〕（僅支援 Vista 以上）</li>
</ol>
</blockquote>
<h2 id="ipconfig-快速查詢你的-IP-網址"><a href="#ipconfig-快速查詢你的-IP-網址" class="headerlink" title="ipconfig 快速查詢你的 IP 網址"></a>ipconfig 快速查詢你的 IP 網址</h2><p>雖然你可以從控制台中找到你的 IP 網址，但是這起碼總要你點個幾下滑鼠吧。ipconfig 是一個可以讓你快速查詢電腦的 IP 網址和一些其他的網路資訊，譬如預設匣道網址<br>這對想要查詢路由器的網路介面網址蠻有幫助的。<br>你只需要在命令提示字元視窗中輸入「ipconfig」即可。然後你就可以看到一系列有關電腦網路連線的資訊。如果你使用的無線網路，你可以查看無線網路卡下的資訊。如果你使用的是有線網路，則可以看乙太網路卡下的資訊。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD02.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD02.png" alt=""></a></p>
<p>＃譯者說明：在「ipconfig」後加上參數「/all」（ipconfig /all）可以取得更多有關網路連線的資訊。</p>
<h2 id="ipconfig-flushdns-清除-DNS-快取"><a href="#ipconfig-flushdns-清除-DNS-快取" class="headerlink" title="ipconfig /flushdns 清除 DNS 快取"></a>ipconfig /flushdns 清除 DNS 快取</h2><p>如果你變更了電腦的 DNS，那你必須清除電腦對 DNS 的快取才能產生效果，為了可以更快的對你的動作產生回應，所以電腦會快取 DNS 的資訊。因此，為了確保在更換 DNS 後，電腦可以馬上透過新的 DNS 去運作，你必須執行清除 DNS 的動作。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD03.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD03.png" alt=""></a></p>
<h2 id="ping-amp-tracert-對網路連線的疑難進行偵查"><a href="#ping-amp-tracert-對網路連線的疑難進行偵查" class="headerlink" title="ping &amp; tracert 對網路連線的疑難進行偵查"></a>ping &amp; tracert 對網路連線的疑難進行偵查</h2><p>對網站或其他網路連線方面的問題，Windows 和其他的作業系統都具備一致的工具讓你可以找出問題所在。<br>首先是 ping 指令。你可以輸入 ping google.com，這時作業系統會向 Google.com 送出封包，Google  也會針對你送出的封包進行回應。如果你從回傳結果中看到有些封包送到 Google.com  則表示你遇到了封包遺失的問題，也有可能是因為網路已經飽和，封包需要等候一段時間來送達它的目的地。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD04.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD04.png" alt=""></a></p>
<p>接下來是 tracert 指令，他功用是追蹤封包到達目的地的路由（走過的路徑或痕跡）。好比你可以試試看 tracert  google.com，從結果你可以看到封包是如何抵達 Google 的。如果你遇到某個網站的連線問題，你可以試試看 tracert  這個網站來看看問題發生甚麼地方。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD05.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD05.png" alt=""></a></p>
<p>更多有關這個指令的資訊，請閱讀 HTG 對<a href="http://www.howtogeek.com/126265/how-to-troubleshoot-internet-connection-problems/" rel="external nofollow noopener noreferrer" target="_blank">網路連線問題的偵測介紹</a>。</p>
<h2 id="shutdown-建立-Windows-8-的快速關機捷徑"><a href="#shutdown-建立-Windows-8-的快速關機捷徑" class="headerlink" title="shutdown 建立 Windows 8 的快速關機捷徑"></a>shutdown 建立 Windows 8 的快速關機捷徑</h2><p>這個指令對 Windows 8 尤其有用。你可以透過這個指令在開始頁面或桌面中建立關機的捷徑，讓你更從容的關機。<br>不只有字面上關機功能，這個指令還可以做得更多，譬如重新啟動電腦或重新啟動後進入進階開機選單。</p>
<ul>
<li>關機：shutdown /s /t 0（零秒後關機，就是馬上關機）</li>
<li>重新啟動：shutdown /r /t 0（零秒後重新啟動）</li>
<li>重新啟動後進入進階開機選項：shutdown /r /o（參數是英文字母「o」不是數字「0」）</li>
</ul>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD06.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD06.png" alt=""></a></p>
<h2 id="recimg-建立自訂救援影像"><a href="#recimg-建立自訂救援影像" class="headerlink" title="recimg 建立自訂救援影像"></a>recimg 建立自訂救援影像</h2><p>Windows 8 的刷新電腦功能讓你可以回復電腦的狀態到初始的階段<br>全新的 Windows 安裝狀態或生產商所訂製的狀態。你也可以自訂你自己的救援影像，但這個功能被隱藏起來了<br>但你可以透過 <strong>recimg</strong> 指令來辦到。它可以讓你移除生產商預安裝的臃腫軟體或加入你喜歡的應用程式到自訂的救援影像中。<br>更多有關使用 recimg 的資訊，可以閱讀 HTG 對 <a href="http://www.howtogeek.com/167831/everything-you-need-to-know-about-creating-custom-recovery-images-for-windows-8/" rel="external nofollow noopener noreferrer" target="_blank">Windows 8 內建自訂救援影像功能的介紹</a>。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD07.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD07.png" alt=""></a></p>
<h2 id="wbadmin-start-backup-建立系統救援影像"><a href="#wbadmin-start-backup-建立系統救援影像" class="headerlink" title="wbadmin start backup 建立系統救援影像"></a>wbadmin start backup 建立系統救援影像</h2><p>Windows 8.1 移除了 Windows 7 中讓你建立系統備份影像的選項。這些系統影像包含了系統中每一個檔案的完整快照，所以它和 Windows 8 的救援影像不太一樣。<br>雖然微軟移除了圖形介面的選項，但系統管理員和技術宅還是可以透過執行 PowerShell 裡面的 wbadmin start backup 來建立系統影像備份。不像前面介紹過的指令，這個指令一定要在 PowerShell 底下才能執行。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD08.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD08.png" alt=""></a></p>
<p>＃譯者說明：開啟 PowerShell 的方式和命令提示字元差不多，只要把上面教的方法中的「cmd」換成「powershell」即可。</p>
<h2 id="sfc-scannow-掃描有問題的系統檔案"><a href="#sfc-scannow-掃描有問題的系統檔案" class="headerlink" title="sfc /scannow 掃描有問題的系統檔案"></a>sfc /scannow 掃描有問題的系統檔案</h2><p>Windows 內建了系統檔案檢查工具，它可以掃描系統檔案同時檢查發生了甚麼問題。如果系統檔案遺失或損毀，系統檔案檢查器會修復它。這樣搞不好可以修復一些系統問題。<br>要使用這個指令你必須以系統管理員的身分開啟命令提示字元，然後執行 sfc /scannow 指令。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD09.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD09.png" alt=""></a></p>
<p>＃譯者說明：又因為微軟的「德政」把「執行」視窗的 Ctrl + Shift + Enter 以系統管理員身分的功能移除後，各版本之間要以系統管理員啟動的方式變得不盡相同。<br>&gt;</p>
<blockquote>
<ol>
<li>〔Winkey〕+〔R〕，輸入「cmd」，按下〔Ctrl〕+〔Shift〕+〔Enter〕（適用於 Windows 7 以下）。</li>
<li>〔Winkey〕進入開始功能表，輸入「cmd」，右鍵點選並選擇選單中的以系統管理員身分執行（適用於 Vista 以上）</li>
<li>〔Winkey〕進入開始頁面，輸入「cmd」，按下〔Ctrl〕+〔Shift〕+〔Enter〕（適用於 Windows 8）</li>
<li>〔Winkey〕+〔X〕，點選「命令提示字元（系統管理員）」（適用於 Windows 8）</li>
</ol>
</blockquote>
<h2 id="telnet-連線到-Telnet-伺服器"><a href="#telnet-連線到-Telnet-伺服器" class="headerlink" title="telnet 連線到 Telnet 伺服器"></a>telnet 連線到 Telnet 伺服器</h2><p>預設情況下系統是不安裝 telnet 用戶端的，因此你必須自己到控制台安裝。安裝後你就可以在不依靠任何第三方軟體的情況下使用 telnet 指令連線到 telnet 伺服器。<br>在可能的情況下，你應該避免使用 telnet，但是如果你要直接連線到一個裝置且它規定你必須透過 telnet 來設定，那這應該就是所需要的。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD10.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD10.png" alt=""></a></p>
<p>＃譯者說明：Telnet？通俗點說就是 BBS 所使用的通訊協定。我依稀記得以前的 Windows 作業系統是可以直接用 telnet 連線到 PTT 的，確切是何時拿掉預設安裝我也不知道。</p>
<h2 id="cipher-永久刪除或覆寫目錄"><a href="#cipher-永久刪除或覆寫目錄" class="headerlink" title="cipher 永久刪除或覆寫目錄"></a>cipher 永久刪除或覆寫目錄</h2><p>多數的情況下 cipher  這個指令是用來管理加密動作的，但它有一些選項可以讓你執行譬如寫入垃圾資料到磁碟、清除磁碟的可用空間確保已刪除的檔案無法被救援。當你按下 Del  按鍵時，那些檔案仍存在在磁碟中，除非你使用的是固態硬碟。cipher 指令可以讓有效地在不依靠第三方工具的情況下「擦除」磁碟。<br>你可以指定擦除某一個磁碟的可用且未使用的空間：<code>cipher /w:C:\</code></p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD11.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD11.png" alt=""></a></p>
<h2 id="netsatat-an-網路連線和埠號清單"><a href="#netsatat-an-網路連線和埠號清單" class="headerlink" title="netsatat -an 網路連線和埠號清單"></a>netsatat -an 網路連線和埠號清單</h2><p>netstat 指令在顯示網路統計的排序清單時顯得格外好用，因為它有多種選項可以利用。其中一個最有趣的是 <strong>netstat -an</strong>，它會顯示電腦中所有開啟的網路連線清單，同時還會列出每個連線所使用的埠號和它們連線的外部對象。</p>
<p><a href="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD12.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="https://dl.dropboxusercontent.com/u/99508/t7Space/Photos/10UsefulWinCMD12.png" alt=""></a></p>
<h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>這當然不是所有對你有所幫助的指令，我們的目的只是要讓你知道有很多功能其實隱藏在圖形介面之下。你要知道 Linux 作業系統不是唯一一個可以讓使用者從指令中受益的平台。</p>
<p>來源：<a href="http://www.howtogeek.com/168896/10-useful-windows-commands-you-should-know/" rel="external nofollow noopener noreferrer" target="_blank">How-To Geek</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這次帶來的是 HTG 近期的文章，關於 10 個對你有幫助的命令提示字元指令。有幾個真的應該記起來，像 ipconfig 這類查看 IP 資訊的指令真的非常好用。&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dl.d
    
    </summary>
    
    
      <category term="Article/Translation" scheme="https://t7yang.github.io/tags/Article-Translation/"/>
    
      <category term="Shell Script" scheme="https://t7yang.github.io/tags/Shell-Script/"/>
    
  </entry>
  
  <entry>
    <title>[翻譯學堂] 給初學者的 Vi 編輯器操作指南</title>
    <link href="https://t7yang.github.io/23484/"/>
    <id>https://t7yang.github.io/23484/</id>
    <published>2012-10-06T10:02:00.000Z</published>
    <updated>2017-09-02T11:12:21.437Z</updated>
    
    <content type="html"><![CDATA[<p>翻譯學堂這次給大家帶來 HTG 對 Vi 初學者的操作指南，相信對有學習過程式設計的讀者而言，Vi 應該都是回憶的一部分，不管你喜不喜歡它。</p>
<p><a name="more"></a></p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner01.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner01.png" alt=""></a><br>Vi 是一個功能強大的文字編輯器，幾乎所有的 Linux 系統都會內建它，甚至是直接嵌入。某些時候你可能會遇到在一些缺乏友善的文字編輯器的系統中進行文件編輯，因此熟悉 Vi 的操作是相當重要的。</p>
<p>不像 Nano——是非常簡單的終端文字編輯器，Vi 並不會在把鍵盤的快捷鍵顯示在螢幕上。它是一個簡約的文字編輯器，具備插入和命令模式。</p>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>Vi 是一個終端應用程式，因此你需要從終端視窗中使用它。使用「<strong>vi/path/to/file</strong>」的命令來開啟舊檔。「<strong>vi/path/to/file</strong>」的指令甚至可以在檔案不存在的情況下使用；這時 Vi 會建立一個新檔，並根據你所指定的位置來儲存。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner02.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner02.png" alt=""></a><br>如果你想要編輯的事系統檔案，請記得使用 sudo。就好比，如果你想要編輯 <a href="http://www.howtogeek.com/howto/38125/htg-explains-what-is-the-linux-fstab-and-how-does-it-work/" rel="external nofollow noopener noreferrer" target="_blank">fstab file</a> 的話，你就必須輸入「<strong>sudo vi/etc/fstab</strong>」。如果你使用的是沒有 sudo 的非 Ubuntu 版本，那妳可以使用「su」來取代 sudo。</p>
<h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><p>當你使用 vi 開啟檔案時就會看到這個畫面。看起來你可以直接編輯文件，但實際上你卻做不到。Vi 是一個簡約的文字編輯器並且需要使用命令模式開啟。如果你嘗試在這個畫面下輸入任何的東西，你可能會遇到無法預期的效果。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner03.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner03.png" alt=""></a><br>在命令模式下，你可以使用方向鍵來移動游標。按下「<strong>x</strong>」鍵可以讓你刪除游標下的字元。還有其他可以讓你刪除字元的方法——好比，輸入「<strong>dd</strong>」（按 d 鍵兩下）可以刪除整列的文字。</p>
<p>你可以在命令模式下選取、複製、剪下、貼上文字。將游標移動你想複製的文字的左邊或右邊，然後按下「<strong>v</strong>」鍵。移動你的游標來選取文字，接著按下「<strong>y</strong>」來複製選取的文字或按下「<strong>x</strong>」把選取的文字剪下。然後你可以把游標移動到你想貼上文字的位置，按下「<strong>p</strong>」鍵就可以貼上。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner04.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner04.png" alt=""></a></p>
<h2 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h2><p>除了命令模式外，你或許要需要瞭解插入模式——讓你在 Vi 中插入文字的模式。你應該知道如何進入插入模式，因為非常簡單——只要在命令模式下按下「<strong>i</strong>」鍵即可。然後你就可以開始打字了，這時 Vi 就不會把你輸入的文字當作指令來處理。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner05.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner05.png" alt=""></a><br>一旦你完成了文字的輸入，只要按下「Escape」鍵就可以回到指令模式。</p>
<h2 id="存檔與離開"><a href="#存檔與離開" class="headerlink" title="存檔與離開"></a>存檔與離開</h2><p>在指令模式下，你可以存檔和離開 Vi。首先，你必須確保你目前處在指令模式下，按一下「Escape」鍵吧（別擔心，就算你已經在指令模式了，按下「Escape」也不會怎樣）。</p>
<p>輸入：「<strong>wq</strong>」然後按下 Enter 來存檔並離開 vi。你也可以將這個兩個指令拆開——譬如，輸入：「<strong>w</strong>」後按下 Enter 會把檔案存檔到硬碟且不會離開 Vi，或輸入：「<strong>q</strong>」在不存檔的情況下離開 Vi。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner06.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner06.png" alt=""></a><br>如果你已經改動過開啟的檔案，Vi 就不會讓你在未存檔就離開，因此你可以輸入：「<strong>q!</strong>」 然後按下 Enter 忽略這個警告並離開 Vi。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner07.png" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/ViGuide4Beginner07.png" alt=""></a><br>如果你想找一個簡單易用的文字編輯器，是時候放棄 Nano 了。雖然多數的 Linux 發行版都逐漸內鍵 Nano，但嵌入式系統和其他精簡化的環境仍保有內鍵 Vi。</p>
<p>作者：<a href="http://www.howtogeek.com/author/chrishoffman/" rel="external nofollow noopener noreferrer" target="_blank">Chris Hoffman</a> on 01/11/12｜譯者：t7yang</p>
<p>原文與圖片來源：<a href="http://www.howtogeek.com/102468/a-beginners-guide-to-editing-text-files-with-vi/" rel="external nofollow noopener noreferrer" target="_blank">How-To Geek</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;翻譯學堂這次給大家帶來 HTG 對 Vi 初學者的操作指南，相信對有學習過程式設計的讀者而言，Vi 應該都是回憶的一部分，不管你喜不喜歡它。&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dl.dropbox.com/u
    
    </summary>
    
    
      <category term="Article/Translation" scheme="https://t7yang.github.io/tags/Article-Translation/"/>
    
  </entry>
  
  <entry>
    <title>[翻譯學堂] 五個 Opera 首創的功能</title>
    <link href="https://t7yang.github.io/65446/"/>
    <id>https://t7yang.github.io/65446/</id>
    <published>2012-08-09T06:30:00.000Z</published>
    <updated>2017-09-02T11:04:30.740Z</updated>
    
    <content type="html"><![CDATA[<p>很久之前就翻譯好的一篇文章，但一直沒有發出來。標題寫的蠻清楚的，就是五個 Opera 首創的瀏覽器功能，原文文末還談了一些關於 Opera 為什麼無法崛起的猜測。<br><a name="more"></a><br>或許對非 Opera 的使用者而言，他們很難理解，何以這家小眾到不行的瀏覽器公司會傳聞被當今最大的網路帝國——Facebook——給看上。但你可知道在沒有自身的作業系統當靠山的背景下，Opera Mini 仍長時間在行動裝置的市場佔有率有著一定份量。</p>
<p>其實 Opera 不只在行動市場為人所知，實際上它有許多創新都是你我耳熟能詳，更早已成為其他瀏覽器爭相模仿的功能。就像是他們自己說的那樣「致敬最好的方式就是模仿」。讓我們來看看五個我們耳熟能詳又最常被其他瀏覽器模仿的 Opera 創新：</p>
<h2 id="瀏覽器分頁："><a href="#瀏覽器分頁：" class="headerlink" title="瀏覽器分頁："></a>瀏覽器分頁：</h2><p>還記得你開啟十幾個視窗只為了瀏覽網頁嗎？Opera 改變了如此糟糕的瀏覽方式。1994 年，Opera 第一次實作了瀏覽器分頁，想當然當時的分頁是矬矬的樣子（類似 mIRC）。但別誤會，華麗的分頁（分頁在頂）也是由 Opera 在 2000 首創的。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst01.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst01.jpg" alt=""></a></p>
<h2 id="快速撥號："><a href="#快速撥號：" class="headerlink" title="快速撥號："></a>快速撥號：</h2><p>快速撥號第一次現身 Opera 是在 2007 年 10 月 25 號的 9.50 beta 1 中，正式版則是在 2008 年 6 月 12 號釋出（t7：快速撥號首先是在行動版上取得熱烈的回響，才移植到桌面版，所以實際上這項發明要更早一些）。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst02.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst02.jpg" alt=""></a><br>或許目前的你不覺得有甚麼了不起，因為各大瀏覽器都「模仿」這個創新（t7：無價的），讓你習以為常，甚至不知道是誰首先想出了這麼棒的創新。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst03.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst03.jpg" alt=""></a></p>
<h2 id="彈出視窗封鎖："><a href="#彈出視窗封鎖：" class="headerlink" title="彈出視窗封鎖："></a>彈出視窗封鎖：</h2><p>如今的小屁孩或許無法想像一個充滿彈出視窗的網路年代。那些奸商甚至將那些做得很爛的彈出視窗封鎖功能當作軟體來賣（就像是防毒軟體一樣）。又一次 Opera 用內建彈出視窗封鎖功能改變這一切（起碼有更好瀏覽體驗）。當然，這也被其他瀏覽器給「抄」走了。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst04.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst04.jpg" alt=""></a></p>
<h2 id="頁面組："><a href="#頁面組：" class="headerlink" title="頁面組："></a>頁面組：</h2><p>頁面組（t7：合理的說，Sessions 可以解釋為工作／瀏覽階段）可以讓你回到上一次的瀏覽器狀態，無論你是不小心將瀏覽器關掉或是有意為之。Opera 是其中一個最早開始實作這個功能的瀏覽器，毫無疑問在設計上也比其他人更具彈性。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst05.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst05.jpg" alt=""></a></p>
<h2 id="刪除隱私資料："><a href="#刪除隱私資料：" class="headerlink" title="刪除隱私資料："></a>刪除隱私資料：</h2><p>刪除隱私資料也是另一個你我早已習以為常的功能。雖然 Chrome 的隱私模式讓這項需求更加容易被滿足，但可以針對局部或全部的方式來刪除隱私資料仍是非常有幫助的。這項功能是在 2000 年第四版的 Opera 中首度登場。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst06.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/5OperaDidFirst06.jpg" alt=""></a></p>
<h2 id="但是，為甚麼？"><a href="#但是，為甚麼？" class="headerlink" title="但是，為甚麼？"></a>但是，為甚麼？</h2><p>「但是，為什麼？」大概是你常聽到和 Opera 關聯在一起的話。雖然原因並不明確，但儘管總是可以早市場一步推出創新的功能，但 Opera 仍在市場佔有率有著慘不忍睹的成績。對此，大家基本的共識是他們做了錯誤的商業決策。就好比在過往他們曾經在瀏覽器上安插廣告和將他定位成付費產品。這些刻板印象也緊緊地跟隨著 Opera 而揮之不去。如今，Opera 就像其他瀏覽器一樣——是一個可以免費使用的軟體，更可貴的是他們沒有失去創新的傳統——幾乎在每次的更新中都帶來創新的功能。各位都應該給他一次的機會，並持公平之心來給它下定論。</p>
<p>來源：<a href="http://my.opera.com/chooseopera/blog/2012/06/13/5-features-opera-did-first" rel="external nofollow noopener noreferrer" target="_blank">Choose Opera</a> | <a href="http://www.slashgeek.net/2012/06/08/5-features-opera-browser-did-first/" rel="external nofollow noopener noreferrer" target="_blank">Slash Geek</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很久之前就翻譯好的一篇文章，但一直沒有發出來。標題寫的蠻清楚的，就是五個 Opera 首創的瀏覽器功能，原文文末還談了一些關於 Opera 為什麼無法崛起的猜測。&lt;br&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;或許對非 Opera 的使用者而言，他們很難理解，何以這家
    
    </summary>
    
    
      <category term="Opera" scheme="https://t7yang.github.io/tags/Opera/"/>
    
      <category term="Opera News" scheme="https://t7yang.github.io/tags/Opera-News/"/>
    
      <category term="Article/Translation" scheme="https://t7yang.github.io/tags/Article-Translation/"/>
    
  </entry>
  
  <entry>
    <title>[翻譯學堂] 從 Windows 到 Mac 使用者的基本須知（翻譯）</title>
    <link href="https://t7yang.github.io/27890/"/>
    <id>https://t7yang.github.io/27890/</id>
    <published>2011-12-31T17:40:00.000Z</published>
    <updated>2017-09-02T11:11:30.825Z</updated>
    
    <content type="html"><![CDATA[<p>2011/2012 跨年去哪裡，我哪都沒去…，宅在家裡無聊翻譯了一篇文章。考慮從 Windows 轉用 Mac 或正在苦惱無法適應 Mac 作業系統的人可以參考看看，或許會有一些幫助。<br><a name="more"></a></p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic01.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic01.jpg" alt=""></a></p>
<p>變更電話、電子郵件帳號或瀏覽器常常需要做一些觀念上的調整；想像一下，如果想要換用其他的作業系統會如何？恐怕很多操作習慣都必須重新學習，如果你從 Windows 7 轉到 Mac，需要調整的觀念就更不是三天兩頭就可以適應的。本文將試著幫助你更快地適應這樣的轉換過程。本文既不是一篇談論兩個作業系統之間的功能差異，也不是兩者之間的比較。我們想做的是教你如何釣魚，而不是餵魚給你吃。簡而言之，我們會教你如何在 Mac 上搜尋應用程式、檔案和資料夾，尋找和安裝你需要的應用程式，管理視窗和找到想要調整的系統偏好設定。</p>
<p>當你開啟 Mac 的那一剎那，你就會感受到它和 Windows 明顯的不同。你必須要了解的第一件事是如何在使用 Mac 上的任何東西來達成你想要做的事情，我的意思是當你開啟一個檔案或資料夾時，你應該知道這些檔案和應用程式如何運作，而不是希望它會顯示一個你熟悉的「我的電腦」。</p>
<h2 id="Windows-工作列與開始功能表-→-Mac-Dock-和系統選單列"><a href="#Windows-工作列與開始功能表-→-Mac-Dock-和系統選單列" class="headerlink" title="Windows 工作列與開始功能表 → Mac Dock 和系統選單列"></a>Windows 工作列與開始功能表 → Mac Dock 和系統選單列</h2><p>作為 Windows 7 的使用者，你早已習慣從開始功能表中找出要開啟的應用程式並且將你常用的項目釘選工作列上。因此，你會認為開始功能表是搜尋應用程式的地方，而工作列是目前執行中程式的放置處。但在 Mac 中，你將要習慣使用 Dock。</p>
<p>Dock 就像圖示整合器，你可以透過它開啟 Finder、程式啟動器、Mission Control 和 Safari 等應用程式。這些在 Mac 上的預設應用程式可以協助你進行一些基本的操作。就像在 Windows 一樣，你可以將你常用的應用程式釘選在 Dock 上。應用程式會自動向左靠齊，而資料夾和最小化的視窗則會自動向右靠齊。你會在在 Dock 上看到三個預設的資料夾——應用程式、文件、下載。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic02.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic02.jpg" alt=""></a></p>
<p>在桌面的頂端，你會看到一個被稱為系統選單列的東西；這個工具列會隨時存在，無論你開啟任何程式或資料夾。它並非一陳不變，而是隨著你目前使用的程式顯示對應的項目。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic03.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic03.jpg" alt=""></a></p>
<p>你會發現上面的選單會隨著你的的應用程式而變化。如果你目前點選的視窗是 Safari（或其他瀏覽器），這個選單列會顯示一些你經常在 Windows 上看到的選項。跟 Windows 不同的是，這個選單列只會在應用程式被點選後才會出現，而不是一直顯示在程式視窗的上頭。因此如果你想看到某個程式的選單，你必須用游標點選那個程式的視窗，這樣選單列才會顯示對應的選單項目。選單列所顯示的偏好設定是跟隨所點選的視窗而變動，並非跟系統綁在一起的。</p>
<h2 id="Dock，到底是啥？"><a href="#Dock，到底是啥？" class="headerlink" title="Dock，到底是啥？"></a>Dock，到底是啥？</h2><p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic04.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic04.jpg" alt=""></a></p>
<p>如果你進一步了解這些顯示在 Dock 上圖示的能耐，我想你應該會更喜愛你的 Mac。Finder 就像 Windows 系統中的 Windows Explorer，它可以讓你瀏覽硬碟上的檔案。對 Finder 圖示最好的形容就是一個雙面的藍色傢伙。點選這個圖示就可以開啟 Finder 了。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic05.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic05.jpg" alt=""></a></p>
<p>應用程式 Launchpad 可以讓你很輕鬆瀏覽所有安裝在系統的應用程式，用滑鼠游標移動螢幕畫面可以檢視不同應用程式。點選圖示就可以開啟應用程式。當你開啟了應用程式後，該程式的圖示就會顯示在 Dock 上。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic06.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic06.jpg" alt=""></a></p>
<p>如果你沒有看到在 Dock 上看到 Launchpad 圖示，你可以在應用程式資料夾中找到並啟動它。啟動它後，右鍵點選應用程式並從選項的子選單中選擇釘選應用程式在 Dock 上。要從 Dock 上刪除一個釘選的應用程式，只需要將圖示圖示拖曳到桌面，圖示就會一溜煙地華麗效果中消失了。</p>
<p>你還可以看到一個類似羅盤的圖示，它就是蘋果的預設的瀏覽器 Safari 。在 Dock 的最右邊，你還會看到一個垃圾桶的圖示，它的功能類似 Windows 作業系統中的資源回收筒。你可以透過右鍵選單和拖曳的方式將檔案回收到 Dock 上的垃圾桶。</p>
<h2 id="Windows-的開始搜尋和-Mac-的-Spotlight"><a href="#Windows-的開始搜尋和-Mac-的-Spotlight" class="headerlink" title="Windows 的開始搜尋和 Mac 的 Spotlight"></a>Windows 的開始搜尋和 Mac 的 Spotlight</h2><p>在 Windows 7 的開始功能表中你可以透過輸入檔名來搜尋資料夾、檔案、應用程式、系統內建工具。相同的功能，在 Mac 上可以透過點選螢幕右上角的放大鏡圖示來搜尋檔案或應用程式。Spotlight 會根據你所輸入的檔名，列出所有符合關鍵字的內容。你可以搜尋任何類型的檔案，譬如應用程式、檔案、資料夾。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic07.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic07.jpg" alt=""></a></p>
<h2 id="控制台與系統偏好設定"><a href="#控制台與系統偏好設定" class="headerlink" title="控制台與系統偏好設定"></a>控制台與系統偏好設定</h2><p>控制台在 Windows 7 中扮演非常重要的角色，同樣的你可以在 Mac 中找到系統偏好設定。要開啟系統偏好設定，點選在系統選單列的蘋果圖示，然後選擇系統偏好設定。在這裡，你可以設定系統時間、音量、顯示、網路、使用者帳號、家長監護、列印等選項。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic08.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic08.jpg" alt=""></a></p>
<h2 id="捲動視窗"><a href="#捲動視窗" class="headerlink" title="捲動視窗"></a>捲動視窗</h2><p>當你在 Mac 使用一般電腦的滑鼠時，你會發現捲動的方向是相反的，譬如你向上捲動滑鼠滾輪，你會發現頁面往下捲動，反之卻往上。不要以為你的滑鼠壞了或是你插錯了孔，這就是 Mac 的邏輯。還有，你或許還會發現關閉、最小化、最大化的按鈕都放置在視窗的左上方，而不是像 Windows 7 放在右上方。</p>
<h2 id="開啟檔案"><a href="#開啟檔案" class="headerlink" title="開啟檔案"></a>開啟檔案</h2><p>選取一個檔案並按下 Enter 按鍵是無法開啟檔案的，相反的，它會進入重新命名的模式。要開啟一個檔案，你可以選擇對它點兩下或選取檔案後按下 Command + O。</p>
<h2 id="檢視硬碟與使用者檔案"><a href="#檢視硬碟與使用者檔案" class="headerlink" title="檢視硬碟與使用者檔案"></a>檢視硬碟與使用者檔案</h2><p>不像 Windows 7，你不會看到類似「我的電腦」這樣的選項，想要檢視硬碟的話，開啟在系統選單列的 Finder 選單並開啟偏好設定。從一般分頁中選擇你想檢視的桌面項目。核取硬碟選項後，你就可以檢視所有連結到你的 Mac 的硬碟。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic09.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic09.jpg" alt=""></a></p>
<p>你會看到四個特殊的資料夾：應用程式、系統、程式庫、使用者。應用程式資料夾會顯示你所安裝的所有應用程式，程式庫資料夾會列出由應用程式所建立的資料夾。系統資料夾是存放系統工具和應用程式儲存檔案的地方。這也是你存放 Safari 延伸套件的資料夾。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic10.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic10.jpg" alt=""></a></p>
<h2 id="應用程式"><a href="#應用程式" class="headerlink" title="應用程式"></a>應用程式</h2><p>當你成為一個 Mac 使用者後，你要體認到這個作業系統仰賴應用程式來擴充所有預設程式所無法完成的功能。在 Mac 上安裝應用程式並不難，只是有點不同而已。在 Windows 上，應用程式檔的格式是 EXE，但在 Mac 上則是 DMG 格式。安裝的程序很少綁在一起。多數的應用程式都可以在 Mac App Store 上找到，應用程式會釘選在 Dock 上並要求你使用蘋果的 ID 登入。</p>
<h2 id="如何安裝應用程式"><a href="#如何安裝應用程式" class="headerlink" title="如何安裝應用程式"></a>如何安裝應用程式</h2><p>你可以在 Mac App Store 上搜尋應用程式，下載付費的應用程式則會要求你的蘋果 ID 有登記信用卡資訊。要下載免費的應用程式，只需點選免費的訊息，按鈕會轉換成綠色並開始讀取安裝，然後提醒你登入蘋果 ID。當你登入後，就會開始下載。在這裡下載和安裝指的同樣的事情。下載完成後，點選應用程式資料夾或 Launchpad 的應用程式圖示。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic11.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic11.jpg" alt=""></a></p>
<p>其實你並非只能從 Mac App Store 上下載應用程式而已，在一些然軟體開發者的網站上也可以下載到應用程式，但安裝的方式有些許不同，你必須自行將存放在下載資料夾的應用程式手動移動到應用程式資料夾。此外，在少數的情況下你可以回遇到開發者將檔案壓縮起來，這時只要透過預設的解壓縮程式將它解壓縮即可。</p>
<h2 id="結束和關閉應用程式"><a href="#結束和關閉應用程式" class="headerlink" title="結束和關閉應用程式"></a>結束和關閉應用程式</h2><p>在 Windows 7，你可以關閉應用程式但並不結束它。譬如你可以關閉正在編輯的圖片，但不離開編輯圖片的程式。同樣的，在 Mac 中關閉和結束也是獨立運作的。舉一個實際的例子，你可以關閉 Safari（或其他瀏覽器），但它仍繼續執行，直到你右鍵點選 Dock 上應用程式的圖示並選擇結束（Quit）。（<span style="color: #666666;">譯者：關閉但仍在背景執行的應用程式在 Dock&nbsp;的圖示下方會有一個亮點</span>）</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic12.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic12.jpg" alt=""></a></p>
<h2 id="強制結束應用程式"><a href="#強制結束應用程式" class="headerlink" title="強制結束應用程式"></a>強制結束應用程式</h2><p>在 Mac 中類似工作管理員的工具可以在應用程式的工具資料夾中的活動監視器（Activity Monitor）。你可以使用活動監視器來結束應用程式，就像你用工作管理員，只是過程比較繁瑣。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic13.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic13.jpg" alt=""></a></p>
<p>如果你想快速結束沒有回應的程式，同時按下 Command + Option + Escape 按鍵，從目前已經開啟的視窗中選擇你要結束的應用程式，然後點選強制結束（Force Quit）。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic14.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic14.jpg" alt=""></a></p>
<h2 id="Mission-Control-與視窗管理"><a href="#Mission-Control-與視窗管理" class="headerlink" title="Mission Control 與視窗管理"></a>Mission Control 與視窗管理</h2><p>你會發現視窗都是獨自最小化而不想 Windows 7 這樣群組運作。這或許讓你很難組織管理你的 workspace，但情況可能不是你想像的。管理視窗最好的方式是使用 Mission Control。這是一個讓你建立可以切換的桌面 space 功能。更具體地說，如果你有 trackpad 的話，你可以使用三隻手指滑動的手勢來切換到其他桌面。每一個桌面空間都會記住你目前開啟的視窗，而且你還可以自由的將視窗移動其他桌面。要使用 Mission Control，點選 Dock 上的圖示然後用最右邊的加號來加入你新增的桌面並拖曳視窗到其他桌面。</p>
<p><a href="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic15.jpg" rel="external nofollow noopener noreferrer" target="_blank"><img src="http://dl.dropbox.com/u/99508/t7Space/Photos/WintoMacBasic15.jpg" alt=""></a></p>
<p>希望當你看完這篇簡單的說明文章後，你對如何存取檔案或資料夾、變更系統偏好設定等都已經有了初步的瞭解。Mac 不是一個比 Windows 還要差的作業系統，但當你轉換到一個新的作業環境後，有很高的可能會因為不適應問題的感到沮喪。Mac 是一個和 Windows 有極大差異的作業系統，但如果想跟進一步的挖掘它，那你應該知道這些基本的常識。</p>
<p>##翻譯文章結束##</p>
<p>翻譯文章來源：<a href="http://www.addictivetips.com/mac-os/basics-to-know-before-moving-from-a-windows-pc-to-an-apple-mac/" rel="external nofollow noopener noreferrer" target="_blank">AdditiveTips</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2011/2012 跨年去哪裡，我哪都沒去…，宅在家裡無聊翻譯了一篇文章。考慮從 Windows 轉用 Mac 或正在苦惱無法適應 Mac 作業系統的人可以參考看看，或許會有一些幫助。&lt;br&gt;&lt;a name=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http:
    
    </summary>
    
    
      <category term="Article/Translation" scheme="https://t7yang.github.io/tags/Article-Translation/"/>
    
      <category term="Mac" scheme="https://t7yang.github.io/tags/Mac/"/>
    
      <category term="TechTalk" scheme="https://t7yang.github.io/tags/TechTalk/"/>
    
  </entry>
  
</feed>
